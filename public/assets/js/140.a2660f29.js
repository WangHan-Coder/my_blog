(window.webpackJsonp=window.webpackJsonp||[]).push([[140],{640:function(t,s,a){"use strict";a.r(s);var n=a(5),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"watchpack"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#watchpack"}},[t._v("#")]),t._v(" watchpack")]),t._v(" "),a("p",[t._v("Wrapper library for directory and file watching.")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://travis-ci.org/webpack/watchpack",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"https://travis-ci.org/webpack/watchpack.svg?branch=master",alt:"Build Status"}}),a("OutboundLink")],1),t._v(" "),a("a",{attrs:{href:"https://ci.appveyor.com/project/sokra/watchpack/branch/master",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"https://ci.appveyor.com/api/projects/status/e5u2qvmugtv0r647/branch/master?svg=true",alt:"Build status"}}),a("OutboundLink")],1),t._v(" "),a("a",{attrs:{href:"https://coveralls.io/r/webpack/watchpack/",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"https://img.shields.io/coveralls/webpack/watchpack.svg",alt:"Test coverage"}}),a("OutboundLink")],1),t._v(" "),a("a",{attrs:{href:"https://codecov.io/gh/webpack/watchpack",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"https://codecov.io/gh/webpack/watchpack/branch/master/graph/badge.svg",alt:"codecov"}}),a("OutboundLink")],1),t._v(" "),a("a",{attrs:{href:"https://www.npmjs.com/package/watchpack",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"https://img.shields.io/npm/dm/watchpack.svg",alt:"downloads"}}),a("OutboundLink")],1),t._v(" "),a("a",{attrs:{href:"https://github.com/webpack/watchpack/graphs/contributors",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"https://img.shields.io/github/contributors/webpack/watchpack.svg",alt:"Github contributors"}}),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"concept"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#concept"}},[t._v("#")]),t._v(" Concept")]),t._v(" "),a("p",[t._v("watchpack high level API doesn't map directly to watchers. Instead a three level architecture ensures that for each directory only a single watcher exists.")]),t._v(" "),a("ul",[a("li",[t._v("The high level API requests "),a("code",[t._v("DirectoryWatchers")]),t._v(" from a "),a("code",[t._v("WatcherManager")]),t._v(", which ensures that only a single "),a("code",[t._v("DirectoryWatcher")]),t._v(" per directory is created.")]),t._v(" "),a("li",[t._v("A user-faced "),a("code",[t._v("Watcher")]),t._v(" can be obtained from a "),a("code",[t._v("DirectoryWatcher")]),t._v(" and provides a filtered view on the "),a("code",[t._v("DirectoryWatcher")]),t._v(".")]),t._v(" "),a("li",[t._v("Reference-counting is used on the "),a("code",[t._v("DirectoryWatcher")]),t._v(" and "),a("code",[t._v("Watcher")]),t._v(" to decide when to close them.")]),t._v(" "),a("li",[t._v("The real watchers are created by the "),a("code",[t._v("DirectoryWatcher")]),t._v(".")]),t._v(" "),a("li",[t._v("Files are never watched directly. This should keep the watcher count low.")]),t._v(" "),a("li",[t._v("Watching can be started in the past. This way watching can start after file reading.")]),t._v(" "),a("li",[t._v("Symlinks are not followed, instead the symlink is watched.")])]),t._v(" "),a("h2",{attrs:{id:"api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api"}},[t._v("#")]),t._v(" API")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" Watchpack "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"watchpack"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" wp "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Watchpack")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// options:")]),t._v("\n\taggregateTimeout"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// fire "aggregated" event when after a change for 1000ms no additional change occurred')]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// aggregated defaults to undefined, which doesn\'t fire an "aggregated" event')]),t._v("\n\n\tpoll"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// poll: true - use polling with the default interval")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// poll: 10000 - use polling with an interval of 10s")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// poll defaults to undefined, which prefer native watching methods")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Note: enable polling when watching on a network path")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// When WATCHPACK_POLLING environment variable is set it will override this option")]),t._v("\n\n\tfollowSymlinks"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true: follows symlinks and watches symlinks and real files")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   (This makes sense when symlinks has not been resolved yet, comes with a performance hit)")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false (default): watches only specified item they may be real files or symlinks")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   (This makes sense when symlinks has already been resolved)")]),t._v("\n\n\tignored"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"**/.git"')]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ignored: "string" - a glob pattern for files or folders that should not be watched')]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ignored: ["string", "string"] - multiple glob patterns that should be ignored')]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ignored: /regexp/ - a regular expression for files or folders that should not be watched")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// All subdirectories are ignored too")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Watchpack.prototype.watch({")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   files: Iterable<string>,")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   directories: Iterable<string>,")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   missing: Iterable<string>,")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   startTime?: number")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// })")]),t._v("\nwp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("watch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tfiles"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" listOfFiles"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tdirectories"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" listOfDirectories"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tmissing"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" listOfNotExistingItems"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tstartTime"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Date"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("now")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10000")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// starts watching these files and directories")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// calling this again will override the files and directories")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// files: can be files or directories, for files: content and existence changes are tracked")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//        for directories: only existence and timestamp changes are tracked")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// directories: only directories, directory content (and content of children, ...) and")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//              existence changes are tracked.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//              assumed to exist, when directory is not found without further information a remove event is emitted")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// missing: can be files or directorees,")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//          only existence changes are tracked")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//          expected to not exist, no remove event is emitted when not found initially")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// files and directories are assumed to exist, when they are not found without further information a remove event is emitted")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// missing is assumed to not exist and no remove event is emitted")]),t._v("\n\nwp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"change"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("filePath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" mtime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" explanation")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// filePath: the changed file")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// mtime: last modified time for the changed file")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// explanation: textual information how this change was detected")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nwp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"remove"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("filePath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" explanation")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// filePath: the removed file or directory")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// explanation: textual information how this change was detected")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nwp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"aggregated"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("changes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" removals")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// changes: a Set of all changed files")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// removals: a Set of all removed files")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// watchpack gives up ownership on these Sets.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Watchpack.prototype.pause()")]),t._v("\nwp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("pause")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// stops emitting events, but keeps watchers open")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// next "watch" call can reuse the watchers')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// The watcher will keep aggregating events")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// which can be received with getAggregated()")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Watchpack.prototype.close()")]),t._v("\nwp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("close")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// stops emitting events and closes all watchers")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Watchpack.prototype.getAggregated(): { changes: Set<string>, removals: Set<string> }")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" changes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" removals "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" wp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getAggregated")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// returns the current aggregated info and removes that from the watcher")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// The next aggregated event won't include that info and will only emitted")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// when futher changes happen")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Can also be used when paused.")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Watchpack.prototype.getTimeInfoEntries()")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" fileTimes "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" wp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getTimeInfoEntries")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// returns a Map with all known time info objects for files and directories")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// this include info from files not directly watched")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// key: absolute path, value: object with { safeTime, timestamp }")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// safeTime: a point in time at which it is safe to say all changes happened before that")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// timestamp: only for files, the mtime timestamp of the file")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// (deprecated)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Watchpack.prototype.getTimes()")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" fileTimes "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" wp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getTimes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// returns an object with all known change times for files")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// this include timestamps from files not directly watched")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// key: absolute path, value: timestamp as number")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br"),a("span",{staticClass:"line-number"},[t._v("29")]),a("br"),a("span",{staticClass:"line-number"},[t._v("30")]),a("br"),a("span",{staticClass:"line-number"},[t._v("31")]),a("br"),a("span",{staticClass:"line-number"},[t._v("32")]),a("br"),a("span",{staticClass:"line-number"},[t._v("33")]),a("br"),a("span",{staticClass:"line-number"},[t._v("34")]),a("br"),a("span",{staticClass:"line-number"},[t._v("35")]),a("br"),a("span",{staticClass:"line-number"},[t._v("36")]),a("br"),a("span",{staticClass:"line-number"},[t._v("37")]),a("br"),a("span",{staticClass:"line-number"},[t._v("38")]),a("br"),a("span",{staticClass:"line-number"},[t._v("39")]),a("br"),a("span",{staticClass:"line-number"},[t._v("40")]),a("br"),a("span",{staticClass:"line-number"},[t._v("41")]),a("br"),a("span",{staticClass:"line-number"},[t._v("42")]),a("br"),a("span",{staticClass:"line-number"},[t._v("43")]),a("br"),a("span",{staticClass:"line-number"},[t._v("44")]),a("br"),a("span",{staticClass:"line-number"},[t._v("45")]),a("br"),a("span",{staticClass:"line-number"},[t._v("46")]),a("br"),a("span",{staticClass:"line-number"},[t._v("47")]),a("br"),a("span",{staticClass:"line-number"},[t._v("48")]),a("br"),a("span",{staticClass:"line-number"},[t._v("49")]),a("br"),a("span",{staticClass:"line-number"},[t._v("50")]),a("br"),a("span",{staticClass:"line-number"},[t._v("51")]),a("br"),a("span",{staticClass:"line-number"},[t._v("52")]),a("br"),a("span",{staticClass:"line-number"},[t._v("53")]),a("br"),a("span",{staticClass:"line-number"},[t._v("54")]),a("br"),a("span",{staticClass:"line-number"},[t._v("55")]),a("br"),a("span",{staticClass:"line-number"},[t._v("56")]),a("br"),a("span",{staticClass:"line-number"},[t._v("57")]),a("br"),a("span",{staticClass:"line-number"},[t._v("58")]),a("br"),a("span",{staticClass:"line-number"},[t._v("59")]),a("br"),a("span",{staticClass:"line-number"},[t._v("60")]),a("br"),a("span",{staticClass:"line-number"},[t._v("61")]),a("br"),a("span",{staticClass:"line-number"},[t._v("62")]),a("br"),a("span",{staticClass:"line-number"},[t._v("63")]),a("br"),a("span",{staticClass:"line-number"},[t._v("64")]),a("br"),a("span",{staticClass:"line-number"},[t._v("65")]),a("br"),a("span",{staticClass:"line-number"},[t._v("66")]),a("br"),a("span",{staticClass:"line-number"},[t._v("67")]),a("br"),a("span",{staticClass:"line-number"},[t._v("68")]),a("br"),a("span",{staticClass:"line-number"},[t._v("69")]),a("br"),a("span",{staticClass:"line-number"},[t._v("70")]),a("br"),a("span",{staticClass:"line-number"},[t._v("71")]),a("br"),a("span",{staticClass:"line-number"},[t._v("72")]),a("br"),a("span",{staticClass:"line-number"},[t._v("73")]),a("br"),a("span",{staticClass:"line-number"},[t._v("74")]),a("br"),a("span",{staticClass:"line-number"},[t._v("75")]),a("br"),a("span",{staticClass:"line-number"},[t._v("76")]),a("br"),a("span",{staticClass:"line-number"},[t._v("77")]),a("br"),a("span",{staticClass:"line-number"},[t._v("78")]),a("br"),a("span",{staticClass:"line-number"},[t._v("79")]),a("br"),a("span",{staticClass:"line-number"},[t._v("80")]),a("br"),a("span",{staticClass:"line-number"},[t._v("81")]),a("br"),a("span",{staticClass:"line-number"},[t._v("82")]),a("br"),a("span",{staticClass:"line-number"},[t._v("83")]),a("br"),a("span",{staticClass:"line-number"},[t._v("84")]),a("br"),a("span",{staticClass:"line-number"},[t._v("85")]),a("br"),a("span",{staticClass:"line-number"},[t._v("86")]),a("br"),a("span",{staticClass:"line-number"},[t._v("87")]),a("br"),a("span",{staticClass:"line-number"},[t._v("88")]),a("br"),a("span",{staticClass:"line-number"},[t._v("89")]),a("br"),a("span",{staticClass:"line-number"},[t._v("90")]),a("br"),a("span",{staticClass:"line-number"},[t._v("91")]),a("br"),a("span",{staticClass:"line-number"},[t._v("92")]),a("br"),a("span",{staticClass:"line-number"},[t._v("93")]),a("br"),a("span",{staticClass:"line-number"},[t._v("94")]),a("br"),a("span",{staticClass:"line-number"},[t._v("95")]),a("br"),a("span",{staticClass:"line-number"},[t._v("96")]),a("br"),a("span",{staticClass:"line-number"},[t._v("97")]),a("br"),a("span",{staticClass:"line-number"},[t._v("98")]),a("br"),a("span",{staticClass:"line-number"},[t._v("99")]),a("br"),a("span",{staticClass:"line-number"},[t._v("100")]),a("br"),a("span",{staticClass:"line-number"},[t._v("101")]),a("br"),a("span",{staticClass:"line-number"},[t._v("102")]),a("br")])])])}),[],!1,null,null,null);s.default=e.exports}}]);