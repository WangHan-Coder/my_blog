(window.webpackJsonp=window.webpackJsonp||[]).push([[134],{632:function(t,s,e){"use strict";e.r(s);var a=e(5),n=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",[e("img",{attrs:{src:"https://terser.org/img/terser-banner-logo.png",alt:"Terser",width:"400"}})]),t._v(" "),e("p",[e("a",{attrs:{href:"https://npmjs.org/package/terser",target:"_blank",rel:"noopener noreferrer"}},[e("img",{attrs:{src:"https://img.shields.io/npm/v/terser.svg",alt:"NPM Version"}}),e("OutboundLink")],1),t._v(" "),e("a",{attrs:{href:"https://npmjs.org/package/terser",target:"_blank",rel:"noopener noreferrer"}},[e("img",{attrs:{src:"https://img.shields.io/npm/dm/terser.svg",alt:"NPM Downloads"}}),e("OutboundLink")],1),t._v(" "),e("a",{attrs:{href:"https://app.travis-ci.com/github/terser/terser",target:"_blank",rel:"noopener noreferrer"}},[e("img",{attrs:{src:"https://app.travis-ci.com/terser/terser.svg?branch=master",alt:"Travis Build"}}),e("OutboundLink")],1),t._v(" "),e("a",{attrs:{href:"https://opencollective.com/terser",target:"_blank",rel:"noopener noreferrer"}},[e("img",{attrs:{src:"https://opencollective.com/terser/tiers/badge.svg",alt:"Opencollective financial contributors"}}),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("A JavaScript parser and mangler/compressor toolkit for ES6+.")]),t._v(" "),e("p",[e("em",[t._v("note")]),t._v(": You can support this project on patreon: "),e("a",{attrs:{target:"_blank",rel:"nofollow",href:"https://www.patreon.com/fabiosantoscode"}},[e("img",{attrs:{src:"https://c5.patreon.com/external/logo/become_a_patron_button@2x.png",alt:"patron",width:"100px",height:"auto"}})]),t._v(". Check out "),e("a",{attrs:{href:"https://github.com/terser/terser/blob/master/PATRONS.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("PATRONS.md"),e("OutboundLink")],1),t._v(" for our first-tier patrons.")]),t._v(" "),e("p",[t._v("Terser recommends you use RollupJS to bundle your modules, as that produces smaller code overall.")]),t._v(" "),e("p",[e("em",[t._v("Beautification")]),t._v(" has been undocumented and is "),e("em",[t._v("being removed")]),t._v(" from terser, we recommend you use "),e("a",{attrs:{href:"https://npmjs.com/package/prettier",target:"_blank",rel:"noopener noreferrer"}},[t._v("prettier"),e("OutboundLink")],1),t._v(".")]),t._v(" "),e("p",[t._v("Find the changelog in "),e("a",{attrs:{href:"https://github.com/terser/terser/blob/master/CHANGELOG.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("CHANGELOG.md"),e("OutboundLink")],1)]),t._v(" "),e("h2",{attrs:{id:"why-choose-terser"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#why-choose-terser"}},[t._v("#")]),t._v(" Why choose terser?")]),t._v(" "),e("p",[e("code",[t._v("uglify-es")]),t._v(" is "),e("a",{attrs:{href:"https://github.com/mishoo/UglifyJS2/issues/3156#issuecomment-392943058",target:"_blank",rel:"noopener noreferrer"}},[t._v("no longer maintained"),e("OutboundLink")],1),t._v(" and "),e("code",[t._v("uglify-js")]),t._v(" does not support ES6+.")]),t._v(" "),e("p",[e("strong",[e("code",[t._v("terser")])]),t._v(" is a fork of "),e("code",[t._v("uglify-es")]),t._v(" that mostly retains API and CLI compatibility\nwith "),e("code",[t._v("uglify-es")]),t._v(" and "),e("code",[t._v("uglify-js@3")]),t._v(".")]),t._v(" "),e("h2",{attrs:{id:"install"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#install"}},[t._v("#")]),t._v(" Install")]),t._v(" "),e("p",[t._v("First make sure you have installed the latest version of "),e("a",{attrs:{href:"http://nodejs.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("node.js"),e("OutboundLink")],1),t._v("\n(You may need to restart your computer after this step).")]),t._v(" "),e("p",[t._v("From NPM for use as a command line app:")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("npm install terser -g\n")])])]),e("p",[t._v("From NPM for programmatic use:")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("npm install terser\n")])])]),e("h1",{attrs:{id:"command-line-usage"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#command-line-usage"}},[t._v("#")]),t._v(" Command line usage")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("terser [input files] [options]\n")])])]),e("p",[t._v("Terser can take multiple input files.  It's recommended that you pass the\ninput files first, then pass the options.  Terser will parse input files\nin sequence and apply any compression options.  The files are parsed in the\nsame global scope, that is, a reference from a file to some\nvariable/function declared in another file will be matched properly.")]),t._v(" "),e("p",[t._v("If no input file is specified, Terser will read from STDIN.")]),t._v(" "),e("p",[t._v("If you wish to pass your options before the input files, separate the two with\na double dash to prevent input files being used as option arguments:")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("terser --compress --mangle -- input.js\n")])])]),e("h3",{attrs:{id:"command-line-options"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#command-line-options"}},[t._v("#")]),t._v(" Command line options")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('    -h, --help                  Print usage information.\n                                `--help options` for details on available options.\n    -V, --version               Print version number.\n    -p, --parse <options>       Specify parser options:\n                                `acorn`  Use Acorn for parsing.\n                                `bare_returns`  Allow return outside of functions.\n                                                Useful when minifying CommonJS\n                                                modules and Userscripts that may\n                                                be anonymous function wrapped (IIFE)\n                                                by the .user.js engine `caller`.\n                                `expression`  Parse a single expression, rather than\n                                              a program (for parsing JSON).\n                                `spidermonkey`  Assume input files are SpiderMonkey\n                                                AST format (as JSON).\n    -c, --compress [options]    Enable compressor/specify compressor options:\n                                `pure_funcs`  List of functions that can be safely\n                                              removed when their return values are\n                                              not used.\n    -m, --mangle [options]      Mangle names/specify mangler options:\n                                `reserved`  List of names that should not be mangled.\n    --mangle-props [options]    Mangle properties/specify mangler options:\n                                `builtins`  Mangle property names that overlaps\n                                            with standard JavaScript globals and DOM\n                                            API props.\n                                `debug`  Add debug prefix and suffix.\n                                `keep_quoted`  Only mangle unquoted properties, quoted\n                                               properties are automatically reserved.\n                                               `strict` disables quoted properties\n                                               being automatically reserved.\n                                `regex`  Only mangle matched property names.\n                                `reserved`  List of names that should not be mangled.\n    -f, --format [options]      Specify format options.\n                                `preamble`  Preamble to prepend to the output. You\n                                            can use this to insert a comment, for\n                                            example for licensing information.\n                                            This will not be parsed, but the source\n                                            map will adjust for its presence.\n                                `quote_style`  Quote style:\n                                               0 - auto\n                                               1 - single\n                                               2 - double\n                                               3 - original\n                                `wrap_iife`  Wrap IIFEs in parenthesis. Note: you may\n                                             want to disable `negate_iife` under\n                                             compressor options.\n                                `wrap_func_args`  Wrap function arguments in parenthesis.\n    -o, --output <file>         Output file path (default STDOUT). Specify `ast` or\n                                `spidermonkey` to write Terser or SpiderMonkey AST\n                                as JSON to STDOUT respectively.\n    --comments [filter]         Preserve copyright comments in the output. By\n                                default this works like Google Closure, keeping\n                                JSDoc-style comments that contain "@license" or\n                                "@preserve". You can optionally pass one of the\n                                following arguments to this flag:\n                                - "all" to keep all comments\n                                - `false` to omit comments in the output\n                                - a valid JS RegExp like `/foo/` or `/^!/` to\n                                keep only matching comments.\n                                Note that currently not *all* comments can be\n                                kept when compression is on, because of dead\n                                code removal or cascading statements into\n                                sequences.\n    --config-file <file>        Read `minify()` options from JSON file.\n    -d, --define <expr>[=value] Global definitions.\n    --ecma <version>            Specify ECMAScript release: 5, 2015, 2016, etc.\n    -e, --enclose [arg[:value]] Embed output in a big function with configurable\n                                arguments and values.\n    --ie8                       Support non-standard Internet Explorer 8.\n                                Equivalent to setting `ie8: true` in `minify()`\n                                for `compress`, `mangle` and `format` options.\n                                By default Terser will not try to be IE-proof.\n    --keep-classnames           Do not mangle/drop class names.\n    --keep-fnames               Do not mangle/drop function names.  Useful for\n                                code relying on Function.prototype.name.\n    --module                    Input is an ES6 module. If `compress` or `mangle` is\n                                enabled then the `toplevel` option will be enabled.\n    --name-cache <file>         File to hold mangled name mappings.\n    --safari10                  Support non-standard Safari 10/11.\n                                Equivalent to setting `safari10: true` in `minify()`\n                                for `mangle` and `format` options.\n                                By default `terser` will not work around\n                                Safari 10/11 bugs.\n    --source-map [options]      Enable source map/specify source map options:\n                                `base`  Path to compute relative paths from input files.\n                                `content`  Input source map, useful if you\'re compressing\n                                           JS that was generated from some other original\n                                           code. Specify "inline" if the source map is\n                                           included within the sources.\n                                `filename`  Name and/or location of the output source.\n                                `includeSources`  Pass this flag if you want to include\n                                                  the content of source files in the\n                                                  source map as sourcesContent property.\n                                `root`  Path to the original source to be included in\n                                        the source map.\n                                `url`  If specified, path to the source map to append in\n                                       `//# sourceMappingURL`.\n    --timings                   Display operations run time on STDERR.\n    --toplevel                  Compress and/or mangle variables in top level scope.\n    --wrap <name>               Embed everything in a big function, making the\n                                “exports” and “global” variables available. You\n                                need to pass an argument to this option to\n                                specify the name that your module will take\n                                when included in, say, a browser.\n')])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br"),e("span",{staticClass:"line-number"},[t._v("28")]),e("br"),e("span",{staticClass:"line-number"},[t._v("29")]),e("br"),e("span",{staticClass:"line-number"},[t._v("30")]),e("br"),e("span",{staticClass:"line-number"},[t._v("31")]),e("br"),e("span",{staticClass:"line-number"},[t._v("32")]),e("br"),e("span",{staticClass:"line-number"},[t._v("33")]),e("br"),e("span",{staticClass:"line-number"},[t._v("34")]),e("br"),e("span",{staticClass:"line-number"},[t._v("35")]),e("br"),e("span",{staticClass:"line-number"},[t._v("36")]),e("br"),e("span",{staticClass:"line-number"},[t._v("37")]),e("br"),e("span",{staticClass:"line-number"},[t._v("38")]),e("br"),e("span",{staticClass:"line-number"},[t._v("39")]),e("br"),e("span",{staticClass:"line-number"},[t._v("40")]),e("br"),e("span",{staticClass:"line-number"},[t._v("41")]),e("br"),e("span",{staticClass:"line-number"},[t._v("42")]),e("br"),e("span",{staticClass:"line-number"},[t._v("43")]),e("br"),e("span",{staticClass:"line-number"},[t._v("44")]),e("br"),e("span",{staticClass:"line-number"},[t._v("45")]),e("br"),e("span",{staticClass:"line-number"},[t._v("46")]),e("br"),e("span",{staticClass:"line-number"},[t._v("47")]),e("br"),e("span",{staticClass:"line-number"},[t._v("48")]),e("br"),e("span",{staticClass:"line-number"},[t._v("49")]),e("br"),e("span",{staticClass:"line-number"},[t._v("50")]),e("br"),e("span",{staticClass:"line-number"},[t._v("51")]),e("br"),e("span",{staticClass:"line-number"},[t._v("52")]),e("br"),e("span",{staticClass:"line-number"},[t._v("53")]),e("br"),e("span",{staticClass:"line-number"},[t._v("54")]),e("br"),e("span",{staticClass:"line-number"},[t._v("55")]),e("br"),e("span",{staticClass:"line-number"},[t._v("56")]),e("br"),e("span",{staticClass:"line-number"},[t._v("57")]),e("br"),e("span",{staticClass:"line-number"},[t._v("58")]),e("br"),e("span",{staticClass:"line-number"},[t._v("59")]),e("br"),e("span",{staticClass:"line-number"},[t._v("60")]),e("br"),e("span",{staticClass:"line-number"},[t._v("61")]),e("br"),e("span",{staticClass:"line-number"},[t._v("62")]),e("br"),e("span",{staticClass:"line-number"},[t._v("63")]),e("br"),e("span",{staticClass:"line-number"},[t._v("64")]),e("br"),e("span",{staticClass:"line-number"},[t._v("65")]),e("br"),e("span",{staticClass:"line-number"},[t._v("66")]),e("br"),e("span",{staticClass:"line-number"},[t._v("67")]),e("br"),e("span",{staticClass:"line-number"},[t._v("68")]),e("br"),e("span",{staticClass:"line-number"},[t._v("69")]),e("br"),e("span",{staticClass:"line-number"},[t._v("70")]),e("br"),e("span",{staticClass:"line-number"},[t._v("71")]),e("br"),e("span",{staticClass:"line-number"},[t._v("72")]),e("br"),e("span",{staticClass:"line-number"},[t._v("73")]),e("br"),e("span",{staticClass:"line-number"},[t._v("74")]),e("br"),e("span",{staticClass:"line-number"},[t._v("75")]),e("br"),e("span",{staticClass:"line-number"},[t._v("76")]),e("br"),e("span",{staticClass:"line-number"},[t._v("77")]),e("br"),e("span",{staticClass:"line-number"},[t._v("78")]),e("br"),e("span",{staticClass:"line-number"},[t._v("79")]),e("br"),e("span",{staticClass:"line-number"},[t._v("80")]),e("br"),e("span",{staticClass:"line-number"},[t._v("81")]),e("br"),e("span",{staticClass:"line-number"},[t._v("82")]),e("br"),e("span",{staticClass:"line-number"},[t._v("83")]),e("br"),e("span",{staticClass:"line-number"},[t._v("84")]),e("br"),e("span",{staticClass:"line-number"},[t._v("85")]),e("br"),e("span",{staticClass:"line-number"},[t._v("86")]),e("br"),e("span",{staticClass:"line-number"},[t._v("87")]),e("br"),e("span",{staticClass:"line-number"},[t._v("88")]),e("br"),e("span",{staticClass:"line-number"},[t._v("89")]),e("br"),e("span",{staticClass:"line-number"},[t._v("90")]),e("br"),e("span",{staticClass:"line-number"},[t._v("91")]),e("br"),e("span",{staticClass:"line-number"},[t._v("92")]),e("br"),e("span",{staticClass:"line-number"},[t._v("93")]),e("br"),e("span",{staticClass:"line-number"},[t._v("94")]),e("br"),e("span",{staticClass:"line-number"},[t._v("95")]),e("br"),e("span",{staticClass:"line-number"},[t._v("96")]),e("br"),e("span",{staticClass:"line-number"},[t._v("97")]),e("br"),e("span",{staticClass:"line-number"},[t._v("98")]),e("br"),e("span",{staticClass:"line-number"},[t._v("99")]),e("br"),e("span",{staticClass:"line-number"},[t._v("100")]),e("br"),e("span",{staticClass:"line-number"},[t._v("101")]),e("br"),e("span",{staticClass:"line-number"},[t._v("102")]),e("br"),e("span",{staticClass:"line-number"},[t._v("103")]),e("br")])]),e("p",[t._v("Specify "),e("code",[t._v("--output")]),t._v(" ("),e("code",[t._v("-o")]),t._v(") to declare the output file.  Otherwise the output\ngoes to STDOUT.")]),t._v(" "),e("h2",{attrs:{id:"cli-source-map-options"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cli-source-map-options"}},[t._v("#")]),t._v(" CLI source map options")]),t._v(" "),e("p",[t._v("Terser can generate a source map file, which is highly useful for\ndebugging your compressed JavaScript.  To get a source map, pass\n"),e("code",[t._v("--source-map --output output.js")]),t._v(" (source map will be written out to\n"),e("code",[t._v("output.js.map")]),t._v(").")]),t._v(" "),e("p",[t._v("Additional options:")]),t._v(" "),e("ul",[e("li",[e("p",[e("code",[t._v("--source-map \"filename='<NAME>'\"")]),t._v(" to specify the name of the source map.")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("--source-map \"root='<URL>'\"")]),t._v(" to pass the URL where the original files can be found.")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("--source-map \"url='<URL>'\"")]),t._v(" to specify the URL where the source map can be found.\nOtherwise Terser assumes HTTP "),e("code",[t._v("X-SourceMap")]),t._v(" is being used and will omit the\n"),e("code",[t._v("//# sourceMappingURL=")]),t._v(" directive.")])])]),t._v(" "),e("p",[t._v("For example:")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("terser js/file1.js js/file2.js \\\n         -o foo.min.js -c -m \\\n         --source-map \"root='http://foo.com/src',url='foo.min.js.map'\"\n")])])]),e("p",[t._v("The above will compress and mangle "),e("code",[t._v("file1.js")]),t._v(" and "),e("code",[t._v("file2.js")]),t._v(", will drop the\noutput in "),e("code",[t._v("foo.min.js")]),t._v(" and the source map in "),e("code",[t._v("foo.min.js.map")]),t._v(".  The source\nmapping will refer to "),e("code",[t._v("http://foo.com/src/js/file1.js")]),t._v(" and\n"),e("code",[t._v("http://foo.com/src/js/file2.js")]),t._v(" (in fact it will list "),e("code",[t._v("http://foo.com/src")]),t._v("\nas the source map root, and the original files as "),e("code",[t._v("js/file1.js")]),t._v(" and\n"),e("code",[t._v("js/file2.js")]),t._v(").")]),t._v(" "),e("h3",{attrs:{id:"composed-source-map"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#composed-source-map"}},[t._v("#")]),t._v(" Composed source map")]),t._v(" "),e("p",[t._v("When you're compressing JS code that was output by a compiler such as\nCoffeeScript, mapping to the JS code won't be too helpful.  Instead, you'd\nlike to map back to the original code (i.e. CoffeeScript).  Terser has an\noption to take an input source map.  Assuming you have a mapping from\nCoffeeScript → compiled JS, Terser can generate a map from CoffeeScript →\ncompressed JS by mapping every token in the compiled JS to its original\nlocation.")]),t._v(" "),e("p",[t._v("To use this feature pass "),e("code",[t._v("--source-map \"content='/path/to/input/source.map'\"")]),t._v("\nor "),e("code",[t._v('--source-map "content=inline"')]),t._v(" if the source map is included inline with\nthe sources.")]),t._v(" "),e("h2",{attrs:{id:"cli-compress-options"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cli-compress-options"}},[t._v("#")]),t._v(" CLI compress options")]),t._v(" "),e("p",[t._v("You need to pass "),e("code",[t._v("--compress")]),t._v(" ("),e("code",[t._v("-c")]),t._v(") to enable the compressor.  Optionally\nyou can pass a comma-separated list of "),e("a",{attrs:{href:"#compress-options"}},[t._v("compress options")]),t._v(".")]),t._v(" "),e("p",[t._v("Options are in the form "),e("code",[t._v("foo=bar")]),t._v(", or just "),e("code",[t._v("foo")]),t._v(" (the latter implies\na boolean option that you want to set "),e("code",[t._v("true")]),t._v("; it's effectively a\nshortcut for "),e("code",[t._v("foo=true")]),t._v(").")]),t._v(" "),e("p",[t._v("Example:")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("terser file.js -c toplevel,sequences=false\n")])])]),e("h2",{attrs:{id:"cli-mangle-options"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cli-mangle-options"}},[t._v("#")]),t._v(" CLI mangle options")]),t._v(" "),e("p",[t._v("To enable the mangler you need to pass "),e("code",[t._v("--mangle")]),t._v(" ("),e("code",[t._v("-m")]),t._v(").  The following\n(comma-separated) options are supported:")]),t._v(" "),e("ul",[e("li",[e("p",[e("code",[t._v("toplevel")]),t._v(" (default "),e("code",[t._v("false")]),t._v(") -- mangle names declared in the top level scope.")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("eval")]),t._v(" (default "),e("code",[t._v("false")]),t._v(") -- mangle names visible in scopes where "),e("code",[t._v("eval")]),t._v(" or "),e("code",[t._v("with")]),t._v(" are used.")])])]),t._v(" "),e("p",[t._v("When mangling is enabled but you want to prevent certain names from being\nmangled, you can declare those names with "),e("code",[t._v("--mangle reserved")]),t._v(" — pass a\ncomma-separated list of names.  For example:")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("terser ... -m reserved=['$','require','exports']\n")])])]),e("p",[t._v("to prevent the "),e("code",[t._v("require")]),t._v(", "),e("code",[t._v("exports")]),t._v(" and "),e("code",[t._v("$")]),t._v(" names from being changed.")]),t._v(" "),e("h3",{attrs:{id:"cli-mangling-property-names-mangle-props"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cli-mangling-property-names-mangle-props"}},[t._v("#")]),t._v(" CLI mangling property names ("),e("code",[t._v("--mangle-props")]),t._v(")")]),t._v(" "),e("p",[e("strong",[t._v("Note:")]),t._v(" THIS "),e("strong",[t._v("WILL")]),t._v(" BREAK YOUR CODE. A good rule of thumb is not to use this unless you know exactly what you're doing and how this works and read this section until the end.")]),t._v(" "),e("p",[t._v("Mangling property names is a separate step, different from variable name mangling.  Pass\n"),e("code",[t._v("--mangle-props")]),t._v(" to enable it. The least dangerous\nway to use this is to use the "),e("code",[t._v("regex")]),t._v(" option like so:")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("terser example.js -c -m --mangle-props regex=/_$/\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[t._v("This will mangle all properties that end with an\nunderscore. So you can use it to mangle internal methods.")]),t._v(" "),e("p",[t._v("By default, it will mangle all properties in the\ninput code with the exception of built in DOM properties and properties\nin core JavaScript classes, which is what will break your code if you don't:")]),t._v(" "),e("ol",[e("li",[t._v("Control all the code you're mangling")]),t._v(" "),e("li",[t._v("Avoid using a module bundler, as they usually will call Terser on each file individually, making it impossible to pass mangled objects between modules.")]),t._v(" "),e("li",[t._v("Avoid calling functions like "),e("code",[t._v("defineProperty")]),t._v(" or "),e("code",[t._v("hasOwnProperty")]),t._v(", because they refer to object properties using strings and will break your code if you don't know what you are doing.")])]),t._v(" "),e("p",[t._v("An example:")]),t._v(" "),e("div",{staticClass:"language-javascript line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// example.js")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" x "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    baz_"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    foo_"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("calc")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("foo_ "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("baz_"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nx"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("bar_ "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nx"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"baz_"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("calc")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br")])]),e("p",[t._v("Mangle all properties (except for JavaScript "),e("code",[t._v("builtins")]),t._v(") ("),e("strong",[t._v("very")]),t._v(" unsafe):")]),t._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ terser example.js -c "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("passes")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" -m --mangle-props\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("div",{staticClass:"language-javascript line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" x"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("o"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("t"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),e("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("i")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("t"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("o"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("s"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("i")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[t._v("Mangle all properties except for "),e("code",[t._v("reserved")]),t._v(" properties (still very unsafe):")]),t._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ terser example.js -c "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("passes")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" -m --mangle-props "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("reserved")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("foo_,bar_"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("div",{staticClass:"language-javascript line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" x"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("o"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("foo_"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),e("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("t")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("foo_"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("o"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("bar_"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("t")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[t._v("Mangle all properties matching a "),e("code",[t._v("regex")]),t._v(" (not as unsafe but still unsafe):")]),t._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ terser example.js -c "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("passes")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" -m --mangle-props "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("regex")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/_$/\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("div",{staticClass:"language-javascript line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" x"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("o"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("t"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),e("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("calc")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("t"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("o"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("i"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("calc")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[t._v("Combining mangle properties options:")]),t._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ terser example.js -c "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("passes")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" -m --mangle-props "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("regex")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/_$/,reserved"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("bar_"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("div",{staticClass:"language-javascript line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" x"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("o"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("t"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),e("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("calc")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("t"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("o"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("bar_"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("calc")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[t._v("In order for this to be of any use, we avoid mangling standard JS names and DOM\nAPI properties by default ("),e("code",[t._v("--mangle-props builtins")]),t._v(" to override).")]),t._v(" "),e("p",[t._v("A regular expression can be used to define which property names should be\nmangled.  For example, "),e("code",[t._v("--mangle-props regex=/^_/")]),t._v(" will only mangle property\nnames that start with an underscore.")]),t._v(" "),e("p",[t._v("When you compress multiple files using this option, in order for them to\nwork together in the end we need to ensure somehow that one property gets\nmangled to the same name in all of them.  For this, pass "),e("code",[t._v("--name-cache filename.json")]),t._v("\nand Terser will maintain these mappings in a file which can then be reused.\nIt should be initially empty.  Example:")]),t._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" -f /tmp/cache.json  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# start fresh")]),t._v("\n$ terser file1.js file2.js --mangle-props --name-cache /tmp/cache.json -o part1.js\n$ terser file3.js file4.js --mangle-props --name-cache /tmp/cache.json -o part2.js\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("p",[t._v("Now, "),e("code",[t._v("part1.js")]),t._v(" and "),e("code",[t._v("part2.js")]),t._v(" will be consistent with each other in terms\nof mangled property names.")]),t._v(" "),e("p",[t._v("Using the name cache is not necessary if you compress all your files in a\nsingle call to Terser.")]),t._v(" "),e("h3",{attrs:{id:"mangling-unquoted-names-mangle-props-keep-quoted"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mangling-unquoted-names-mangle-props-keep-quoted"}},[t._v("#")]),t._v(" Mangling unquoted names ("),e("code",[t._v("--mangle-props keep_quoted")]),t._v(")")]),t._v(" "),e("p",[t._v("Using quoted property name ("),e("code",[t._v('o["foo"]')]),t._v(") reserves the property name ("),e("code",[t._v("foo")]),t._v(")\nso that it is not mangled throughout the entire script even when used in an\nunquoted style ("),e("code",[t._v("o.foo")]),t._v("). Example:")]),t._v(" "),e("div",{staticClass:"language-javascript line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// stuff.js")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" o "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"foo"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    bar"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\no"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("foo "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" o"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("bar"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("o"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("foo"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br")])]),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ terser stuff.js --mangle-props keep_quoted -c -m\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("div",{staticClass:"language-javascript line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" o"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("foo"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("o"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("o"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("foo"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v("o"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("o"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("o"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("foo"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("h3",{attrs:{id:"debugging-property-name-mangling"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#debugging-property-name-mangling"}},[t._v("#")]),t._v(" Debugging property name mangling")]),t._v(" "),e("p",[t._v("You can also pass "),e("code",[t._v("--mangle-props debug")]),t._v(" in order to mangle property names\nwithout completely obscuring them. For example the property "),e("code",[t._v("o.foo")]),t._v("\nwould mangle to "),e("code",[t._v("o._$foo$_")]),t._v(" with this option. This allows property mangling\nof a large codebase while still being able to debug the code and identify\nwhere mangling is breaking things.")]),t._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ terser stuff.js --mangle-props debug -c -m\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("div",{staticClass:"language-javascript line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" o"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("_$foo$_"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("_$bar$_"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("o"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_$foo$_"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v("o"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_$bar$_"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("o"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_$foo$_"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[t._v("You can also pass a custom suffix using "),e("code",[t._v("--mangle-props debug=XYZ")]),t._v(". This would then\nmangle "),e("code",[t._v("o.foo")]),t._v(" to "),e("code",[t._v("o._$foo$XYZ_")]),t._v(". You can change this each time you compile a\nscript to identify how a property got mangled. One technique is to pass a\nrandom number on every compile to simulate mangling changing with different\ninputs (e.g. as you update the input script with new properties), and to help\nidentify mistakes like writing mangled keys to storage.")]),t._v(" "),e("h1",{attrs:{id:"api-reference"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#api-reference"}},[t._v("#")]),t._v(" API Reference")]),t._v(" "),e("p",[t._v("Assuming installation via NPM, you can load Terser in your application\nlike this:")]),t._v(" "),e("div",{staticClass:"language-javascript line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" minify "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"terser"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[t._v("Or,")]),t._v(" "),e("div",{staticClass:"language-javascript line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" minify "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"terser"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[t._v("Browser loading is also supported:")]),t._v(" "),e("div",{staticClass:"language-html line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-html"}},[e("code",[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("https://cdn.jsdelivr.net/npm/source-map@0.7.3/dist/source-map.js"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),e("span",{pre:!0,attrs:{class:"token script"}}),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("https://cdn.jsdelivr.net/npm/terser/dist/bundle.min.js"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),e("span",{pre:!0,attrs:{class:"token script"}}),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br")])]),e("p",[t._v("There is a single async high level function, "),e("strong",[e("code",[t._v("async minify(code, options)")])]),t._v(",\nwhich will perform all minification "),e("a",{attrs:{href:"#minify-options"}},[t._v("phases")]),t._v(" in a configurable\nmanner. By default "),e("code",[t._v("minify()")]),t._v(" will enable "),e("a",{attrs:{href:"#compress-options"}},[e("code",[t._v("compress")])]),t._v("\nand "),e("a",{attrs:{href:"#mangle-options"}},[e("code",[t._v("mangle")])]),t._v(". Example:")]),t._v(" "),e("div",{staticClass:"language-javascript line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" code "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"function add(first, second) { return first + second; }"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" result "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("minify")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("code"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" sourceMap"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("code"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// minified output: function add(n,d){return n+d}")]),t._v("\nconsole"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("map"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// source map")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br")])]),e("p",[t._v("You can "),e("code",[t._v("minify")]),t._v(" more than one JavaScript file at a time by using an object\nfor the first argument where the keys are file names and the values are source\ncode:")]),t._v(" "),e("div",{staticClass:"language-javascript line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" code "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"file1.js"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"function add(first, second) { return first + second; }"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"file2.js"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"console.log(add(1 + 2, 3 + 4));"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" result "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("minify")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("code"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("code"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// function add(d,n){return d+n}console.log(add(3,7));")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br")])]),e("p",[t._v("The "),e("code",[t._v("toplevel")]),t._v(" option:")]),t._v(" "),e("div",{staticClass:"language-javascript line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" code "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"file1.js"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"function add(first, second) { return first + second; }"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"file2.js"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"console.log(add(1 + 2, 3 + 4));"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" options "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" toplevel"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" result "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("minify")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("code"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" options"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("code"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// console.log(3+7);")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br")])]),e("p",[t._v("The "),e("code",[t._v("nameCache")]),t._v(" option:")]),t._v(" "),e("div",{staticClass:"language-javascript line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" options "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    mangle"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        toplevel"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    nameCache"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" result1 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("minify")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"file1.js"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"function add(first, second) { return first + second; }"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" options"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" result2 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("minify")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"file2.js"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"console.log(add(1 + 2, 3 + 4));"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" options"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("code"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// function n(n,r){return n+r}")]),t._v("\nconsole"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result2"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("code"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// console.log(n(3,7));")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br")])]),e("p",[t._v("You may persist the name cache to the file system in the following way:")]),t._v(" "),e("div",{staticClass:"language-javascript line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" cacheFileName "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/tmp/cache.json"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" options "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    mangle"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        properties"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    nameCache"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JSON")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("parse")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fs"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("readFileSync")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cacheFileName"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"utf8"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nfs"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("writeFileSync")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"part1.js"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("minify")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"file1.js"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" fs"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("readFileSync")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"file1.js"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"utf8"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"file2.js"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" fs"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("readFileSync")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"file2.js"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"utf8"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" options"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("code"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"utf8"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nfs"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("writeFileSync")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"part2.js"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("minify")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"file3.js"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" fs"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("readFileSync")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"file3.js"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"utf8"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"file4.js"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" fs"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("readFileSync")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"file4.js"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"utf8"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" options"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("code"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"utf8"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nfs"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("writeFileSync")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cacheFileName"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JSON")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("stringify")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("options"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("nameCache"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"utf8"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br")])]),e("p",[t._v("An example of a combination of "),e("code",[t._v("minify()")]),t._v(" options:")]),t._v(" "),e("div",{staticClass:"language-javascript line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" code "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"file1.js"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"function add(first, second) { return first + second; }"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"file2.js"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"console.log(add(1 + 2, 3 + 4));"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" options "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    toplevel"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    compress"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        global_defs"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"@console.log"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"alert"')]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        passes"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    format"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        preamble"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/* minified */"')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" result "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("minify")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("code"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" options"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("code"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// /* minified */")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// alert(10);"')]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br")])]),e("p",[t._v("An error example:")]),t._v(" "),e("div",{staticClass:"language-javascript line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" result "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("minify")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"foo.js"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"if (0) else console.log(1);"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Do something with result")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("error"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" message"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" filename"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" line"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" col"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" pos "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" error"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Do something with error")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br")])]),e("h2",{attrs:{id:"minify-options"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#minify-options"}},[t._v("#")]),t._v(" Minify options")]),t._v(" "),e("ul",[e("li",[e("p",[e("code",[t._v("ecma")]),t._v(" (default "),e("code",[t._v("undefined")]),t._v(") - pass "),e("code",[t._v("5")]),t._v(", "),e("code",[t._v("2015")]),t._v(", "),e("code",[t._v("2016")]),t._v(", etc to override\n"),e("code",[t._v("compress")]),t._v(" and "),e("code",[t._v("format")]),t._v("'s "),e("code",[t._v("ecma")]),t._v(" options.")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("enclose")]),t._v(" (default "),e("code",[t._v("false")]),t._v(") - pass "),e("code",[t._v("true")]),t._v(", or a string in the format\nof "),e("code",[t._v('"args[:values]"')]),t._v(", where "),e("code",[t._v("args")]),t._v(" and "),e("code",[t._v("values")]),t._v(" are comma-separated\nargument names and values, respectively, to embed the output in a big\nfunction with the configurable arguments and values.")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("parse")]),t._v(" (default "),e("code",[t._v("{}")]),t._v(") — pass an object if you wish to specify some\nadditional "),e("a",{attrs:{href:"#parse-options"}},[t._v("parse options")]),t._v(".")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("compress")]),t._v(" (default "),e("code",[t._v("{}")]),t._v(") — pass "),e("code",[t._v("false")]),t._v(" to skip compressing entirely.\nPass an object to specify custom "),e("a",{attrs:{href:"#compress-options"}},[t._v("compress options")]),t._v(".")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("mangle")]),t._v(" (default "),e("code",[t._v("true")]),t._v(") — pass "),e("code",[t._v("false")]),t._v(" to skip mangling names, or pass\nan object to specify "),e("a",{attrs:{href:"#mangle-options"}},[t._v("mangle options")]),t._v(" (see below).")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("mangle.properties")]),t._v(" (default "),e("code",[t._v("false")]),t._v(") — a subcategory of the mangle option.\nPass an object to specify custom "),e("a",{attrs:{href:"#mangle-properties-options"}},[t._v("mangle property options")]),t._v(".")])])]),t._v(" "),e("li",[e("p",[e("code",[t._v("module")]),t._v(" (default "),e("code",[t._v("false")]),t._v(') — Use when minifying an ES6 module. "use strict"\nis implied and names can be mangled on the top scope. If '),e("code",[t._v("compress")]),t._v(" or\n"),e("code",[t._v("mangle")]),t._v(" is enabled then the "),e("code",[t._v("toplevel")]),t._v(" option will be enabled.")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("format")]),t._v(" or "),e("code",[t._v("output")]),t._v(" (default "),e("code",[t._v("null")]),t._v(") — pass an object if you wish to specify\nadditional "),e("a",{attrs:{href:"#format-options"}},[t._v("format options")]),t._v(".  The defaults are optimized\nfor best compression.")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("sourceMap")]),t._v(" (default "),e("code",[t._v("false")]),t._v(") - pass an object if you wish to specify\n"),e("a",{attrs:{href:"#source-map-options"}},[t._v("source map options")]),t._v(".")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("toplevel")]),t._v(" (default "),e("code",[t._v("false")]),t._v(") - set to "),e("code",[t._v("true")]),t._v(" if you wish to enable top level\nvariable and function name mangling and to drop unused variables and functions.")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("nameCache")]),t._v(" (default "),e("code",[t._v("null")]),t._v(") - pass an empty object "),e("code",[t._v("{}")]),t._v(" or a previously\nused "),e("code",[t._v("nameCache")]),t._v(" object if you wish to cache mangled variable and\nproperty names across multiple invocations of "),e("code",[t._v("minify()")]),t._v(". Note: this is\na read/write property. "),e("code",[t._v("minify()")]),t._v(" will read the name cache state of this\nobject and update it during minification so that it may be\nreused or externally persisted by the user.")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("ie8")]),t._v(" (default "),e("code",[t._v("false")]),t._v(") - set to "),e("code",[t._v("true")]),t._v(" to support IE8.")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("keep_classnames")]),t._v(" (default: "),e("code",[t._v("undefined")]),t._v(") - pass "),e("code",[t._v("true")]),t._v(" to prevent discarding or mangling\nof class names. Pass a regular expression to only keep class names matching that regex.")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("keep_fnames")]),t._v(" (default: "),e("code",[t._v("false")]),t._v(") - pass "),e("code",[t._v("true")]),t._v(" to prevent discarding or mangling\nof function names. Pass a regular expression to only keep function names matching that regex.\nUseful for code relying on "),e("code",[t._v("Function.prototype.name")]),t._v(". If the top level minify option\n"),e("code",[t._v("keep_classnames")]),t._v(" is "),e("code",[t._v("undefined")]),t._v(" it will be overridden with the value of the top level\nminify option "),e("code",[t._v("keep_fnames")]),t._v(".")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("safari10")]),t._v(" (default: "),e("code",[t._v("false")]),t._v(") - pass "),e("code",[t._v("true")]),t._v(" to work around Safari 10/11 bugs in\nloop scoping and "),e("code",[t._v("await")]),t._v(". See "),e("code",[t._v("safari10")]),t._v(" options in "),e("a",{attrs:{href:"#mangle-options"}},[e("code",[t._v("mangle")])]),t._v("\nand "),e("a",{attrs:{href:"#format-options"}},[e("code",[t._v("format")])]),t._v(" for details.")])])]),t._v(" "),e("h2",{attrs:{id:"minify-options-structure"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#minify-options-structure"}},[t._v("#")]),t._v(" Minify options structure")]),t._v(" "),e("div",{staticClass:"language-javascript line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    parse"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// parse options")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    compress"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// compress options")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    mangle"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// mangle options")]),t._v("\n\n        properties"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// mangle property options")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    format"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// format options (can also use `output` for backwards compatibility)")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    sourceMap"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// source map options")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    ecma"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// specify one of: 5, 2015, 2016, etc.")]),t._v("\n    enclose"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// or specify true, or "args:values"')]),t._v("\n    keep_classnames"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    keep_fnames"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    ie8"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    module"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    nameCache"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// or specify a name cache object")]),t._v("\n    safari10"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    toplevel"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br"),e("span",{staticClass:"line-number"},[t._v("28")]),e("br"),e("span",{staticClass:"line-number"},[t._v("29")]),e("br"),e("span",{staticClass:"line-number"},[t._v("30")]),e("br")])]),e("h3",{attrs:{id:"source-map-options"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#source-map-options"}},[t._v("#")]),t._v(" Source map options")]),t._v(" "),e("p",[t._v("To generate a source map:")]),t._v(" "),e("div",{staticClass:"language-javascript line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" result "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("minify")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"file1.js"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"var a = function() {};"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    sourceMap"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        filename"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"out.js"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        url"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"out.js.map"')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("code"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// minified output")]),t._v("\nconsole"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("map"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// source map")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br")])]),e("p",[t._v("Note that the source map is not saved in a file, it's just returned in\n"),e("code",[t._v("result.map")]),t._v(".  The value passed for "),e("code",[t._v("sourceMap.url")]),t._v(" is only used to set\n"),e("code",[t._v("//# sourceMappingURL=out.js.map")]),t._v(" in "),e("code",[t._v("result.code")]),t._v(". The value of\n"),e("code",[t._v("filename")]),t._v(" is only used to set "),e("code",[t._v("file")]),t._v(" attribute (see "),e("a",{attrs:{href:"https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k",target:"_blank",rel:"noopener noreferrer"}},[t._v("the spec"),e("OutboundLink")],1),t._v(")\nin source map file.")]),t._v(" "),e("p",[t._v("You can set option "),e("code",[t._v("sourceMap.url")]),t._v(" to be "),e("code",[t._v('"inline"')]),t._v(" and source map will\nbe appended to code.")]),t._v(" "),e("p",[t._v("You can also specify sourceRoot property to be included in source map:")]),t._v(" "),e("div",{staticClass:"language-javascript line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" result "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("minify")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"file1.js"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"var a = function() {};"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    sourceMap"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        root"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://example.com/src"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        url"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"out.js.map"')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br")])]),e("p",[t._v("If you're compressing compiled JavaScript and have a source map for it, you\ncan use "),e("code",[t._v("sourceMap.content")]),t._v(":")]),t._v(" "),e("div",{staticClass:"language-javascript line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" result "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("minify")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"compiled.js"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"compiled code"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    sourceMap"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        content"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"content from compiled.js.map"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        url"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"minified.js.map"')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// same as before, it returns `code` and `map`")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br")])]),e("p",[t._v("If you're using the "),e("code",[t._v("X-SourceMap")]),t._v(" header instead, you can just omit "),e("code",[t._v("sourceMap.url")]),t._v(".")]),t._v(" "),e("p",[t._v("If you happen to need the source map as a raw object, set "),e("code",[t._v("sourceMap.asObject")]),t._v(" to "),e("code",[t._v("true")]),t._v(".")]),t._v(" "),e("h2",{attrs:{id:"parse-options"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#parse-options"}},[t._v("#")]),t._v(" Parse options")]),t._v(" "),e("ul",[e("li",[e("p",[e("code",[t._v("bare_returns")]),t._v(" (default "),e("code",[t._v("false")]),t._v(") -- support top level "),e("code",[t._v("return")]),t._v(" statements")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("html5_comments")]),t._v(" (default "),e("code",[t._v("true")]),t._v(")")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("shebang")]),t._v(" (default "),e("code",[t._v("true")]),t._v(") -- support "),e("code",[t._v("#!command")]),t._v(" as the first line")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("spidermonkey")]),t._v(" (default "),e("code",[t._v("false")]),t._v(") -- accept a Spidermonkey (Mozilla) AST")])])]),t._v(" "),e("h2",{attrs:{id:"compress-options"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#compress-options"}},[t._v("#")]),t._v(" Compress options")]),t._v(" "),e("ul",[e("li",[e("p",[e("code",[t._v("defaults")]),t._v(" (default: "),e("code",[t._v("true")]),t._v(") -- Pass "),e("code",[t._v("false")]),t._v(" to disable most default\nenabled "),e("code",[t._v("compress")]),t._v(" transforms. Useful when you only want to enable a few\n"),e("code",[t._v("compress")]),t._v(" options while disabling the rest.")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("arrows")]),t._v(" (default: "),e("code",[t._v("true")]),t._v(") -- Class and object literal methods are converted\nwill also be converted to arrow expressions if the resultant code is shorter:\n"),e("code",[t._v("m(){return x}")]),t._v(" becomes "),e("code",[t._v("m:()=>x")]),t._v(". To do this to regular ES5 functions which\ndon't use "),e("code",[t._v("this")]),t._v(" or "),e("code",[t._v("arguments")]),t._v(", see "),e("code",[t._v("unsafe_arrows")]),t._v(".")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("arguments")]),t._v(" (default: "),e("code",[t._v("false")]),t._v(") -- replace "),e("code",[t._v("arguments[index]")]),t._v(" with function\nparameter name whenever possible.")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("booleans")]),t._v(" (default: "),e("code",[t._v("true")]),t._v(") -- various optimizations for boolean context,\nfor example "),e("code",[t._v("!!a ? b : c → a ? b : c")])])]),t._v(" "),e("li",[e("p",[e("code",[t._v("booleans_as_integers")]),t._v(" (default: "),e("code",[t._v("false")]),t._v(") -- Turn booleans into 0 and 1, also\nmakes comparisons with booleans use "),e("code",[t._v("==")]),t._v(" and "),e("code",[t._v("!=")]),t._v(" instead of "),e("code",[t._v("===")]),t._v(" and "),e("code",[t._v("!==")]),t._v(".")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("collapse_vars")]),t._v(" (default: "),e("code",[t._v("true")]),t._v(") -- Collapse single-use non-constant variables,\nside effects permitting.")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("comparisons")]),t._v(" (default: "),e("code",[t._v("true")]),t._v(") -- apply certain optimizations to binary nodes,\ne.g. "),e("code",[t._v("!(a <= b) → a > b")]),t._v(" (only when "),e("code",[t._v("unsafe_comps")]),t._v("), attempts to negate binary\nnodes, e.g. "),e("code",[t._v("a = !b && !c && !d && !e → a=!(b||c||d||e)")]),t._v(" etc.")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("computed_props")]),t._v(" (default: "),e("code",[t._v("true")]),t._v(") -- Transforms constant computed properties\ninto regular ones: "),e("code",[t._v('{["computed"]: 1}')]),t._v(" is converted to "),e("code",[t._v("{computed: 1}")]),t._v(".")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("conditionals")]),t._v(" (default: "),e("code",[t._v("true")]),t._v(") -- apply optimizations for "),e("code",[t._v("if")]),t._v("-s and conditional\nexpressions")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("dead_code")]),t._v(" (default: "),e("code",[t._v("true")]),t._v(") -- remove unreachable code")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("directives")]),t._v(" (default: "),e("code",[t._v("true")]),t._v(") -- remove redundant or non-standard directives")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("drop_console")]),t._v(" (default: "),e("code",[t._v("false")]),t._v(") -- Pass "),e("code",[t._v("true")]),t._v(" to discard calls to\n"),e("code",[t._v("console.*")]),t._v(" functions. If you wish to drop a specific function call\nsuch as "),e("code",[t._v("console.info")]),t._v(" and/or retain side effects from function arguments\nafter dropping the function call then use "),e("code",[t._v("pure_funcs")]),t._v(" instead.")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("drop_debugger")]),t._v(" (default: "),e("code",[t._v("true")]),t._v(") -- remove "),e("code",[t._v("debugger;")]),t._v(" statements")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("ecma")]),t._v(" (default: "),e("code",[t._v("5")]),t._v(") -- Pass "),e("code",[t._v("2015")]),t._v(" or greater to enable "),e("code",[t._v("compress")]),t._v(" options that\nwill transform ES5 code into smaller ES6+ equivalent forms.")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("evaluate")]),t._v(" (default: "),e("code",[t._v("true")]),t._v(") -- attempt to evaluate constant expressions")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("expression")]),t._v(" (default: "),e("code",[t._v("false")]),t._v(") -- Pass "),e("code",[t._v("true")]),t._v(" to preserve completion values\nfrom terminal statements without "),e("code",[t._v("return")]),t._v(", e.g. in bookmarklets.")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("global_defs")]),t._v(" (default: "),e("code",[t._v("{}")]),t._v(") -- see "),e("a",{attrs:{href:"#conditional-compilation"}},[t._v("conditional compilation")])])]),t._v(" "),e("li",[e("p",[e("code",[t._v("hoist_funs")]),t._v(" (default: "),e("code",[t._v("false")]),t._v(") -- hoist function declarations")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("hoist_props")]),t._v(" (default: "),e("code",[t._v("true")]),t._v(") -- hoist properties from constant object and\narray literals into regular variables subject to a set of constraints. For example:\n"),e("code",[t._v("var o={p:1, q:2}; f(o.p, o.q);")]),t._v(" is converted to "),e("code",[t._v("f(1, 2);")]),t._v(". Note: "),e("code",[t._v("hoist_props")]),t._v("\nworks best with "),e("code",[t._v("mangle")]),t._v(" enabled, the "),e("code",[t._v("compress")]),t._v(" option "),e("code",[t._v("passes")]),t._v(" set to "),e("code",[t._v("2")]),t._v(" or higher,\nand the "),e("code",[t._v("compress")]),t._v(" option "),e("code",[t._v("toplevel")]),t._v(" enabled.")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("hoist_vars")]),t._v(" (default: "),e("code",[t._v("false")]),t._v(") -- hoist "),e("code",[t._v("var")]),t._v(" declarations (this is "),e("code",[t._v("false")]),t._v("\nby default because it seems to increase the size of the output in general)")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("if_return")]),t._v(" (default: "),e("code",[t._v("true")]),t._v(") -- optimizations for if/return and if/continue")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("inline")]),t._v(" (default: "),e("code",[t._v("true")]),t._v(") -- inline calls to function with simple/"),e("code",[t._v("return")]),t._v(" statement:")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("false")]),t._v(" -- same as "),e("code",[t._v("0")])]),t._v(" "),e("li",[e("code",[t._v("0")]),t._v(" -- disabled inlining")]),t._v(" "),e("li",[e("code",[t._v("1")]),t._v(" -- inline simple functions")]),t._v(" "),e("li",[e("code",[t._v("2")]),t._v(" -- inline functions with arguments")]),t._v(" "),e("li",[e("code",[t._v("3")]),t._v(" -- inline functions with arguments and variables")]),t._v(" "),e("li",[e("code",[t._v("true")]),t._v(" -- same as "),e("code",[t._v("3")])])])]),t._v(" "),e("li",[e("p",[e("code",[t._v("join_vars")]),t._v(" (default: "),e("code",[t._v("true")]),t._v(") -- join consecutive "),e("code",[t._v("var")]),t._v(" statements")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("keep_classnames")]),t._v(" (default: "),e("code",[t._v("false")]),t._v(") -- Pass "),e("code",[t._v("true")]),t._v(" to prevent the compressor from\ndiscarding class names. Pass a regular expression to only keep class names matching\nthat regex. See also: the "),e("code",[t._v("keep_classnames")]),t._v(" "),e("a",{attrs:{href:"#mangle-options"}},[t._v("mangle option")]),t._v(".")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("keep_fargs")]),t._v(" (default: "),e("code",[t._v("true")]),t._v(") -- Prevents the compressor from discarding unused\nfunction arguments.  You need this for code which relies on "),e("code",[t._v("Function.length")]),t._v(".")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("keep_fnames")]),t._v(" (default: "),e("code",[t._v("false")]),t._v(") -- Pass "),e("code",[t._v("true")]),t._v(" to prevent the\ncompressor from discarding function names. Pass a regular expression to only keep\nfunction names matching that regex. Useful for code relying on "),e("code",[t._v("Function.prototype.name")]),t._v(".\nSee also: the "),e("code",[t._v("keep_fnames")]),t._v(" "),e("a",{attrs:{href:"#mangle-options"}},[t._v("mangle option")]),t._v(".")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("keep_infinity")]),t._v(" (default: "),e("code",[t._v("false")]),t._v(") -- Pass "),e("code",[t._v("true")]),t._v(" to prevent "),e("code",[t._v("Infinity")]),t._v(" from\nbeing compressed into "),e("code",[t._v("1/0")]),t._v(", which may cause performance issues on Chrome.")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("loops")]),t._v(" (default: "),e("code",[t._v("true")]),t._v(") -- optimizations for "),e("code",[t._v("do")]),t._v(", "),e("code",[t._v("while")]),t._v(" and "),e("code",[t._v("for")]),t._v(" loops\nwhen we can statically determine the condition.")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("module")]),t._v(" (default "),e("code",[t._v("false")]),t._v(") -- Pass "),e("code",[t._v("true")]),t._v(" when compressing an ES6 module. Strict\nmode is implied and the "),e("code",[t._v("toplevel")]),t._v(" option as well.")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("negate_iife")]),t._v(" (default: "),e("code",[t._v("true")]),t._v(') -- negate "Immediately-Called Function Expressions"\nwhere the return value is discarded, to avoid the parens that the\ncode generator would insert.')])]),t._v(" "),e("li",[e("p",[e("code",[t._v("passes")]),t._v(" (default: "),e("code",[t._v("1")]),t._v(") -- The maximum number of times to run compress.\nIn some cases more than one pass leads to further compressed code.  Keep in\nmind more passes will take more time.")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("properties")]),t._v(" (default: "),e("code",[t._v("true")]),t._v(") -- rewrite property access using the dot notation, for\nexample "),e("code",[t._v('foo["bar"] → foo.bar')])])]),t._v(" "),e("li",[e("p",[e("code",[t._v("pure_funcs")]),t._v(" (default: "),e("code",[t._v("null")]),t._v(") -- You can pass an array of names and\nTerser will assume that those functions do not produce side\neffects.  DANGER: will not check if the name is redefined in scope.\nAn example case here, for instance "),e("code",[t._v("var q = Math.floor(a/b)")]),t._v(".  If\nvariable "),e("code",[t._v("q")]),t._v(" is not used elsewhere, Terser will drop it, but will\nstill keep the "),e("code",[t._v("Math.floor(a/b)")]),t._v(", not knowing what it does.  You can\npass "),e("code",[t._v("pure_funcs: [ 'Math.floor' ]")]),t._v(" to let it know that this\nfunction won't produce any side effect, in which case the whole\nstatement would get discarded.  The current implementation adds some\noverhead (compression will be slower).")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("pure_getters")]),t._v(" (default: "),e("code",[t._v('"strict"')]),t._v(") -- If you pass "),e("code",[t._v("true")]),t._v(" for\nthis, Terser will assume that object property access\n(e.g. "),e("code",[t._v("foo.bar")]),t._v(" or "),e("code",[t._v('foo["bar"]')]),t._v(") doesn't have any side effects.\nSpecify "),e("code",[t._v('"strict"')]),t._v(" to treat "),e("code",[t._v("foo.bar")]),t._v(" as side-effect-free only when\n"),e("code",[t._v("foo")]),t._v(" is certain to not throw, i.e. not "),e("code",[t._v("null")]),t._v(" or "),e("code",[t._v("undefined")]),t._v(".")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("reduce_vars")]),t._v(" (default: "),e("code",[t._v("true")]),t._v(") -- Improve optimization on variables assigned with and\nused as constant values.")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("reduce_funcs")]),t._v(" (default: "),e("code",[t._v("true")]),t._v(") -- Inline single-use functions when\npossible. Depends on "),e("code",[t._v("reduce_vars")]),t._v(" being enabled.  Disabling this option\nsometimes improves performance of the output code.")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("sequences")]),t._v(" (default: "),e("code",[t._v("true")]),t._v(") -- join consecutive simple statements using the\ncomma operator.  May be set to a positive integer to specify the maximum number\nof consecutive comma sequences that will be generated. If this option is set to\n"),e("code",[t._v("true")]),t._v(" then the default "),e("code",[t._v("sequences")]),t._v(" limit is "),e("code",[t._v("200")]),t._v(". Set option to "),e("code",[t._v("false")]),t._v(" or "),e("code",[t._v("0")]),t._v("\nto disable. The smallest "),e("code",[t._v("sequences")]),t._v(" length is "),e("code",[t._v("2")]),t._v(". A "),e("code",[t._v("sequences")]),t._v(" value of "),e("code",[t._v("1")]),t._v("\nis grandfathered to be equivalent to "),e("code",[t._v("true")]),t._v(" and as such means "),e("code",[t._v("200")]),t._v(". On rare\noccasions the default sequences limit leads to very slow compress times in which\ncase a value of "),e("code",[t._v("20")]),t._v(" or less is recommended.")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("side_effects")]),t._v(" (default: "),e("code",[t._v("true")]),t._v(") -- Remove expressions which have no side effects\nand whose results aren't used.")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("switches")]),t._v(" (default: "),e("code",[t._v("true")]),t._v(") -- de-duplicate and remove unreachable "),e("code",[t._v("switch")]),t._v(" branches")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("toplevel")]),t._v(" (default: "),e("code",[t._v("false")]),t._v(") -- drop unreferenced functions ("),e("code",[t._v('"funcs"')]),t._v(") and/or\nvariables ("),e("code",[t._v('"vars"')]),t._v(") in the top level scope ("),e("code",[t._v("false")]),t._v(" by default, "),e("code",[t._v("true")]),t._v(" to drop\nboth unreferenced functions and variables)")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("top_retain")]),t._v(" (default: "),e("code",[t._v("null")]),t._v(") -- prevent specific toplevel functions and\nvariables from "),e("code",[t._v("unused")]),t._v(" removal (can be array, comma-separated, RegExp or\nfunction. Implies "),e("code",[t._v("toplevel")]),t._v(")")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("typeofs")]),t._v(" (default: "),e("code",[t._v("true")]),t._v(") -- Transforms "),e("code",[t._v('typeof foo == "undefined"')]),t._v(" into\n"),e("code",[t._v("foo === void 0")]),t._v(".  Note: recommend to set this value to "),e("code",[t._v("false")]),t._v(" for IE10 and\nearlier versions due to known issues.")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("unsafe")]),t._v(" (default: "),e("code",[t._v("false")]),t._v(') -- apply "unsafe" transformations\n('),e("a",{attrs:{href:"#the-unsafe-compress-option"}},[t._v("details")]),t._v(").")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("unsafe_arrows")]),t._v(" (default: "),e("code",[t._v("false")]),t._v(") -- Convert ES5 style anonymous function\nexpressions to arrow functions if the function body does not reference "),e("code",[t._v("this")]),t._v(".\nNote: it is not always safe to perform this conversion if code relies on the\nthe function having a "),e("code",[t._v("prototype")]),t._v(", which arrow functions lack.\nThis transform requires that the "),e("code",[t._v("ecma")]),t._v(" compress option is set to "),e("code",[t._v("2015")]),t._v(" or greater.")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("unsafe_comps")]),t._v(" (default: "),e("code",[t._v("false")]),t._v(") -- Reverse "),e("code",[t._v("<")]),t._v(" and "),e("code",[t._v("<=")]),t._v(" to "),e("code",[t._v(">")]),t._v(" and "),e("code",[t._v(">=")]),t._v(" to\nallow improved compression. This might be unsafe when an at least one of two\noperands is an object with computed values due the use of methods like "),e("code",[t._v("get")]),t._v(",\nor "),e("code",[t._v("valueOf")]),t._v(". This could cause change in execution order after operands in the\ncomparison are switching. Compression only works if both "),e("code",[t._v("comparisons")]),t._v(" and\n"),e("code",[t._v("unsafe_comps")]),t._v(" are both set to true.")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("unsafe_Function")]),t._v(" (default: "),e("code",[t._v("false")]),t._v(") -- compress and mangle "),e("code",[t._v("Function(args, code)")]),t._v("\nwhen both "),e("code",[t._v("args")]),t._v(" and "),e("code",[t._v("code")]),t._v(" are string literals.")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("unsafe_math")]),t._v(" (default: "),e("code",[t._v("false")]),t._v(") -- optimize numerical expressions like\n"),e("code",[t._v("2 * x * 3")]),t._v(" into "),e("code",[t._v("6 * x")]),t._v(", which may give imprecise floating point results.")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("unsafe_symbols")]),t._v(" (default: "),e("code",[t._v("false")]),t._v(") -- removes keys from native Symbol\ndeclarations, e.g "),e("code",[t._v('Symbol("kDog")')]),t._v(" becomes "),e("code",[t._v("Symbol()")]),t._v(".")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("unsafe_methods")]),t._v(" (default: false) -- Converts "),e("code",[t._v("{ m: function(){} }")]),t._v(" to\n"),e("code",[t._v("{ m(){} }")]),t._v(". "),e("code",[t._v("ecma")]),t._v(" must be set to "),e("code",[t._v("6")]),t._v(" or greater to enable this transform.\nIf "),e("code",[t._v("unsafe_methods")]),t._v(' is a RegExp then key/value pairs with keys matching the\nRegExp will be converted to concise methods.\nNote: if enabled there is a risk of getting a "'),e("code",[t._v("<method name>")]),t._v(' is not a\nconstructor" TypeError should any code try to '),e("code",[t._v("new")]),t._v(" the former function.")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("unsafe_proto")]),t._v(" (default: "),e("code",[t._v("false")]),t._v(") -- optimize expressions like\n"),e("code",[t._v("Array.prototype.slice.call(a)")]),t._v(" into "),e("code",[t._v("[].slice.call(a)")])])]),t._v(" "),e("li",[e("p",[e("code",[t._v("unsafe_regexp")]),t._v(" (default: "),e("code",[t._v("false")]),t._v(") -- enable substitutions of variables with\n"),e("code",[t._v("RegExp")]),t._v(" values the same way as if they are constants.")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("unsafe_undefined")]),t._v(" (default: "),e("code",[t._v("false")]),t._v(") -- substitute "),e("code",[t._v("void 0")]),t._v(" if there is a\nvariable named "),e("code",[t._v("undefined")]),t._v(" in scope (variable name will be mangled, typically\nreduced to a single character)")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("unused")]),t._v(" (default: "),e("code",[t._v("true")]),t._v(") -- drop unreferenced functions and variables (simple\ndirect variable assignments do not count as references unless set to "),e("code",[t._v('"keep_assign"')]),t._v(")")])])]),t._v(" "),e("h2",{attrs:{id:"mangle-options"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mangle-options"}},[t._v("#")]),t._v(" Mangle options")]),t._v(" "),e("ul",[e("li",[e("p",[e("code",[t._v("eval")]),t._v(" (default "),e("code",[t._v("false")]),t._v(") -- Pass "),e("code",[t._v("true")]),t._v(" to mangle names visible in scopes\nwhere "),e("code",[t._v("eval")]),t._v(" or "),e("code",[t._v("with")]),t._v(" are used.")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("keep_classnames")]),t._v(" (default "),e("code",[t._v("false")]),t._v(") -- Pass "),e("code",[t._v("true")]),t._v(" to not mangle class names.\nPass a regular expression to only keep class names matching that regex.\nSee also: the "),e("code",[t._v("keep_classnames")]),t._v(" "),e("a",{attrs:{href:"#compress-options"}},[t._v("compress option")]),t._v(".")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("keep_fnames")]),t._v(" (default "),e("code",[t._v("false")]),t._v(") -- Pass "),e("code",[t._v("true")]),t._v(" to not mangle function names.\nPass a regular expression to only keep function names matching that regex.\nUseful for code relying on "),e("code",[t._v("Function.prototype.name")]),t._v(". See also: the "),e("code",[t._v("keep_fnames")]),t._v(" "),e("a",{attrs:{href:"#compress-options"}},[t._v("compress option")]),t._v(".")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("module")]),t._v(" (default "),e("code",[t._v("false")]),t._v(") -- Pass "),e("code",[t._v("true")]),t._v(" an ES6 modules, where the toplevel\nscope is not the global scope. Implies "),e("code",[t._v("toplevel")]),t._v(".")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("nth_identifier")]),t._v(" (default: an internal mangler that weights based on character\nfrequency analysis) -- Pass an object with a "),e("code",[t._v("get(n)")]),t._v(" function that converts an\nordinal into the nth most favored (usually shortest) identifier.\nOptionally also provide "),e("code",[t._v("reset()")]),t._v(", "),e("code",[t._v("sort()")]),t._v(", and "),e("code",[t._v("consider(chars, delta)")]),t._v(" to\nuse character frequency analysis of the source code.")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("reserved")]),t._v(" (default "),e("code",[t._v("[]")]),t._v(") -- Pass an array of identifiers that should be\nexcluded from mangling. Example: "),e("code",[t._v('["foo", "bar"]')]),t._v(".")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("toplevel")]),t._v(" (default "),e("code",[t._v("false")]),t._v(") -- Pass "),e("code",[t._v("true")]),t._v(" to mangle names declared in the\ntop level scope.")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("safari10")]),t._v(" (default "),e("code",[t._v("false")]),t._v(") -- Pass "),e("code",[t._v("true")]),t._v(" to work around the Safari 10 loop\niterator "),e("a",{attrs:{href:"https://bugs.webkit.org/show_bug.cgi?id=171041",target:"_blank",rel:"noopener noreferrer"}},[t._v("bug"),e("OutboundLink")],1),t._v('\n"Cannot declare a let variable twice".\nSee also: the '),e("code",[t._v("safari10")]),t._v(" "),e("a",{attrs:{href:"#format-options"}},[t._v("format option")]),t._v(".")])])]),t._v(" "),e("p",[t._v("Examples:")]),t._v(" "),e("div",{staticClass:"language-javascript line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// test.js")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" globalVar"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("funcName")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("firstLongName"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" anotherLongName")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" myVariable "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" firstLongName "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("  anotherLongName"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br")])]),e("div",{staticClass:"language-javascript line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" code "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" fs"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("readFileSync")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"test.js"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"utf8"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("minify")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("code"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("code"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'function funcName(a,n){}var globalVar;'")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("minify")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("code"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" mangle"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" reserved"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'firstLongName'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("code"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'function funcName(firstLongName,a){}var globalVar;'")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("minify")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("code"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" mangle"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" toplevel"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("code"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'function n(n,a){}var a;'")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br")])]),e("h3",{attrs:{id:"mangle-properties-options"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mangle-properties-options"}},[t._v("#")]),t._v(" Mangle properties options")]),t._v(" "),e("ul",[e("li",[e("p",[e("code",[t._v("builtins")]),t._v(" (default: "),e("code",[t._v("false")]),t._v(") — Use "),e("code",[t._v("true")]),t._v(" to allow the mangling of builtin\nDOM properties. Not recommended to override this setting.")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("debug")]),t._v(" (default: "),e("code",[t._v("false")]),t._v(") — Mangle names with the original name still present.\nPass an empty string "),e("code",[t._v('""')]),t._v(" to enable, or a non-empty string to set the debug suffix.")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("keep_quoted")]),t._v(" (default: "),e("code",[t._v("false")]),t._v(") — How quoting properties ("),e("code",[t._v('{"prop": ...}')]),t._v(" and "),e("code",[t._v('obj["prop"]')]),t._v(") controls what gets mangled.")]),t._v(" "),e("ul",[e("li",[e("code",[t._v('"strict"')]),t._v(" (recommended) -- "),e("code",[t._v("obj.prop")]),t._v(" is mangled.")]),t._v(" "),e("li",[e("code",[t._v("false")]),t._v(" -- "),e("code",[t._v('obj["prop"]')]),t._v(" is mangled.")]),t._v(" "),e("li",[e("code",[t._v("true")]),t._v(" -- "),e("code",[t._v("obj.prop")]),t._v(" is mangled unless there is "),e("code",[t._v('obj["prop"]')]),t._v(" elsewhere in the code.")])])]),t._v(" "),e("li",[e("p",[e("code",[t._v("nth_identifer")]),t._v(" (default: an internal mangler that weights based on character\nfrequency analysis) -- Pass an object with a "),e("code",[t._v("get(n)")]),t._v(" function that converts an\nordinal into the nth most favored (usually shortest) identifier.\nOptionally also provide "),e("code",[t._v("reset()")]),t._v(", "),e("code",[t._v("sort()")]),t._v(", and "),e("code",[t._v("consider(chars, delta)")]),t._v(" to\nuse character frequency analysis of the source code.")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("regex")]),t._v(" (default: "),e("code",[t._v("null")]),t._v(") — Pass a "),e("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",target:"_blank",rel:"noopener noreferrer"}},[t._v("RegExp literal or pattern string"),e("OutboundLink")],1),t._v(" to only mangle property matching the regular expression.")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("reserved")]),t._v(" (default: "),e("code",[t._v("[]")]),t._v(") — Do not mangle property names listed in the\n"),e("code",[t._v("reserved")]),t._v(" array.")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("undeclared")]),t._v(" (default: "),e("code",[t._v("false")]),t._v(") - Mangle those names when they are accessed\nas properties of known top level variables but their declarations are never\nfound in input code. May be useful when only minifying parts of a project.\nSee "),e("a",{attrs:{href:"https://github.com/terser/terser/issues/397",target:"_blank",rel:"noopener noreferrer"}},[t._v("#397"),e("OutboundLink")],1),t._v(" for more details.")])])]),t._v(" "),e("h2",{attrs:{id:"format-options"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#format-options"}},[t._v("#")]),t._v(" Format options")]),t._v(" "),e("p",[t._v('These options control the format of Terser\'s output code. Previously known\nas "output options".')]),t._v(" "),e("ul",[e("li",[e("p",[e("code",[t._v("ascii_only")]),t._v(" (default "),e("code",[t._v("false")]),t._v(") -- escape Unicode characters in strings and\nregexps (affects directives with non-ascii characters becoming invalid)")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("beautify")]),t._v(" (default "),e("code",[t._v("false")]),t._v(") -- (DEPRECATED) whether to beautify the output.\nWhen using the legacy "),e("code",[t._v("-b")]),t._v(" CLI flag, this is set to true by default.")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("braces")]),t._v(" (default "),e("code",[t._v("false")]),t._v(") -- always insert braces in "),e("code",[t._v("if")]),t._v(", "),e("code",[t._v("for")]),t._v(",\n"),e("code",[t._v("do")]),t._v(", "),e("code",[t._v("while")]),t._v(" or "),e("code",[t._v("with")]),t._v(" statements, even if their body is a single\nstatement.")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("comments")]),t._v(" (default "),e("code",[t._v('"some"')]),t._v(') -- by default it keeps JSDoc-style comments\nthat contain "@license", "@preserve" or start with '),e("code",[t._v("!")]),t._v(", pass "),e("code",[t._v("true")]),t._v(" or\n"),e("code",[t._v('"all"')]),t._v(" to preserve all comments, "),e("code",[t._v("false")]),t._v(" to omit comments in the output,\na regular expression string (e.g. "),e("code",[t._v("/^!/")]),t._v(") or a function.")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("ecma")]),t._v(" (default "),e("code",[t._v("5")]),t._v(") -- set desired EcmaScript standard version for output.\nSet "),e("code",[t._v("ecma")]),t._v(" to "),e("code",[t._v("2015")]),t._v(" or greater to emit shorthand object properties - i.e.:\n"),e("code",[t._v("{a}")]),t._v(" instead of "),e("code",[t._v("{a: a}")]),t._v(".  The "),e("code",[t._v("ecma")]),t._v(" option will only change the output in\ndirect control of the beautifier. Non-compatible features in your input will\nstill be output as is. For example: an "),e("code",[t._v("ecma")]),t._v(" setting of "),e("code",[t._v("5")]),t._v(" will "),e("strong",[t._v("not")]),t._v("\nconvert modern code to ES5.")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("indent_level")]),t._v(" (default "),e("code",[t._v("4")]),t._v(")")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("indent_start")]),t._v(" (default "),e("code",[t._v("0")]),t._v(") -- prefix all lines by that many spaces")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("inline_script")]),t._v(" (default "),e("code",[t._v("true")]),t._v(") -- escape HTML comments and the slash in\noccurrences of "),e("code",[t._v("<\/script>")]),t._v(" in strings")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("keep_numbers")]),t._v(" (default "),e("code",[t._v("false")]),t._v(") -- keep number literals as it was in original code\n(disables optimizations like converting "),e("code",[t._v("1000000")]),t._v(" into "),e("code",[t._v("1e6")]),t._v(")")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("keep_quoted_props")]),t._v(" (default "),e("code",[t._v("false")]),t._v(") -- when turned on, prevents stripping\nquotes from property names in object literals.")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("max_line_len")]),t._v(" (default "),e("code",[t._v("false")]),t._v(") -- maximum line length (for minified code)")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("preamble")]),t._v(" (default "),e("code",[t._v("null")]),t._v(") -- when passed it must be a string and\nit will be prepended to the output literally.  The source map will\nadjust for this text.  Can be used to insert a comment containing\nlicensing information, for example.")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("quote_keys")]),t._v(" (default "),e("code",[t._v("false")]),t._v(") -- pass "),e("code",[t._v("true")]),t._v(" to quote all keys in literal\nobjects")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("quote_style")]),t._v(" (default "),e("code",[t._v("0")]),t._v(") -- preferred quote style for strings (affects\nquoted property names and directives as well):")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("0")]),t._v(" -- prefers double quotes, switches to single quotes when there are\nmore double quotes in the string itself. "),e("code",[t._v("0")]),t._v(" is best for gzip size.")]),t._v(" "),e("li",[e("code",[t._v("1")]),t._v(" -- always use single quotes")]),t._v(" "),e("li",[e("code",[t._v("2")]),t._v(" -- always use double quotes")]),t._v(" "),e("li",[e("code",[t._v("3")]),t._v(" -- always use the original quotes")])])]),t._v(" "),e("li",[e("p",[e("code",[t._v("preserve_annotations")]),t._v(" -- (default "),e("code",[t._v("false")]),t._v(") -- Preserve "),e("a",{attrs:{href:"#annotations"}},[t._v("Terser annotations")]),t._v(" in the output.")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("safari10")]),t._v(" (default "),e("code",[t._v("false")]),t._v(") -- set this option to "),e("code",[t._v("true")]),t._v(" to work around\nthe "),e("a",{attrs:{href:"https://bugs.webkit.org/show_bug.cgi?id=176685",target:"_blank",rel:"noopener noreferrer"}},[t._v("Safari 10/11 await bug"),e("OutboundLink")],1),t._v(".\nSee also: the "),e("code",[t._v("safari10")]),t._v(" "),e("a",{attrs:{href:"#mangle-options"}},[t._v("mangle option")]),t._v(".")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("semicolons")]),t._v(" (default "),e("code",[t._v("true")]),t._v(") -- separate statements with semicolons.  If\nyou pass "),e("code",[t._v("false")]),t._v(" then whenever possible we will use a newline instead of a\nsemicolon, leading to more readable output of minified code (size before\ngzip could be smaller; size after gzip insignificantly larger).")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("shebang")]),t._v(" (default "),e("code",[t._v("true")]),t._v(") -- preserve shebang "),e("code",[t._v("#!")]),t._v(" in preamble (bash scripts)")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("spidermonkey")]),t._v(" (default "),e("code",[t._v("false")]),t._v(") -- produce a Spidermonkey (Mozilla) AST")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("webkit")]),t._v(" (default "),e("code",[t._v("false")]),t._v(") -- enable workarounds for WebKit bugs.\nPhantomJS users should set this option to "),e("code",[t._v("true")]),t._v(".")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("wrap_iife")]),t._v(" (default "),e("code",[t._v("false")]),t._v(") -- pass "),e("code",[t._v("true")]),t._v(" to wrap immediately invoked\nfunction expressions. See\n"),e("a",{attrs:{href:"https://github.com/mishoo/UglifyJS2/issues/640",target:"_blank",rel:"noopener noreferrer"}},[t._v("#640"),e("OutboundLink")],1),t._v(" for more details.")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("wrap_func_args")]),t._v(" (default "),e("code",[t._v("true")]),t._v(") -- pass "),e("code",[t._v("false")]),t._v(" if you do not want to wrap\nfunction expressions that are passed as arguments, in parenthesis. See\n"),e("a",{attrs:{href:"https://github.com/nolanlawson/optimize-js",target:"_blank",rel:"noopener noreferrer"}},[t._v("OptimizeJS"),e("OutboundLink")],1),t._v(" for more details.")])])]),t._v(" "),e("h1",{attrs:{id:"miscellaneous"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#miscellaneous"}},[t._v("#")]),t._v(" Miscellaneous")]),t._v(" "),e("h3",{attrs:{id:"keeping-copyright-notices-or-other-comments"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#keeping-copyright-notices-or-other-comments"}},[t._v("#")]),t._v(" Keeping copyright notices or other comments")]),t._v(" "),e("p",[t._v("You can pass "),e("code",[t._v("--comments")]),t._v(' to retain certain comments in the output.  By\ndefault it will keep JSDoc-style comments that contain "@preserve",\n"@license" or "@cc_on" (conditional compilation for IE).  You can pass\n'),e("code",[t._v("--comments all")]),t._v(" to keep all the comments, or a valid JavaScript regexp to\nkeep only comments that match this regexp.  For example "),e("code",[t._v("--comments /^!/")]),t._v("\nwill keep comments like "),e("code",[t._v("/*! Copyright Notice */")]),t._v(".")]),t._v(" "),e("p",[t._v("Note, however, that there might be situations where comments are lost.  For\nexample:")]),t._v(" "),e("div",{staticClass:"language-javascript line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("f")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/** @preserve Foo Bar */")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("g")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// this function is never called")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("something")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br")])]),e("p",[t._v('Even though it has "@preserve", the comment will be lost because the inner\nfunction '),e("code",[t._v("g")]),t._v(" (which is the AST node to which the comment is attached to) is\ndiscarded by the compressor as not referenced.")]),t._v(" "),e("p",[t._v("The safest comments where to place copyright information (or other info that\nneeds to be kept in the output) are comments attached to toplevel nodes.")]),t._v(" "),e("h3",{attrs:{id:"the-unsafe-compress-option"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#the-unsafe-compress-option"}},[t._v("#")]),t._v(" The "),e("code",[t._v("unsafe")]),t._v(" "),e("code",[t._v("compress")]),t._v(" option")]),t._v(" "),e("p",[t._v("It enables some transformations that "),e("em",[t._v("might")]),t._v(" break code logic in certain\ncontrived cases, but should be fine for most code.  It assumes that standard\nbuilt-in ECMAScript functions and classes have not been altered or replaced.\nYou might want to try it on your own code; it should reduce the minified size.\nSome examples of the optimizations made when this option is enabled:")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("new Array(1, 2, 3)")]),t._v(" or "),e("code",[t._v("Array(1, 2, 3)")]),t._v(" → "),e("code",[t._v("[ 1, 2, 3 ]")])]),t._v(" "),e("li",[e("code",[t._v("Array.from([1, 2, 3])")]),t._v(" → "),e("code",[t._v("[1, 2, 3]")])]),t._v(" "),e("li",[e("code",[t._v("new Object()")]),t._v(" → "),e("code",[t._v("{}")])]),t._v(" "),e("li",[e("code",[t._v("String(exp)")]),t._v(" or "),e("code",[t._v("exp.toString()")]),t._v(" → "),e("code",[t._v('"" + exp')])]),t._v(" "),e("li",[e("code",[t._v("new Object/RegExp/Function/Error/Array (...)")]),t._v(" → we discard the "),e("code",[t._v("new")])]),t._v(" "),e("li",[e("code",[t._v('"foo bar".substr(4)')]),t._v(" → "),e("code",[t._v('"bar"')])])]),t._v(" "),e("h3",{attrs:{id:"conditional-compilation"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#conditional-compilation"}},[t._v("#")]),t._v(" Conditional compilation")]),t._v(" "),e("p",[t._v("You can use the "),e("code",[t._v("--define")]),t._v(" ("),e("code",[t._v("-d")]),t._v(") switch in order to declare global\nvariables that Terser will assume to be constants (unless defined in\nscope).  For example if you pass "),e("code",[t._v("--define DEBUG=false")]),t._v(" then, coupled with\ndead code removal Terser will discard the following from the output:")]),t._v(" "),e("div",{staticClass:"language-javascript line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DEBUG")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"debug stuff"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("p",[t._v("You can specify nested constants in the form of "),e("code",[t._v("--define env.DEBUG=false")]),t._v(".")]),t._v(" "),e("p",[t._v("Another way of doing that is to declare your globals as constants in a\nseparate file and include it into the build.  For example you can have a\n"),e("code",[t._v("build/defines.js")]),t._v(" file with the following:")]),t._v(" "),e("div",{staticClass:"language-javascript line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DEBUG")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("PRODUCTION")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// etc.")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("p",[t._v("and build your code like this:")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("terser build/defines.js js/foo.js js/bar.js... -c\n")])])]),e("p",[t._v("Terser will notice the constants and, since they cannot be altered, it\nwill evaluate references to them to the value itself and drop unreachable\ncode as usual.  The build will contain the "),e("code",[t._v("const")]),t._v(" declarations if you use\nthem. If you are targeting < ES6 environments which does not support "),e("code",[t._v("const")]),t._v(",\nusing "),e("code",[t._v("var")]),t._v(" with "),e("code",[t._v("reduce_vars")]),t._v(" (enabled by default) should suffice.")]),t._v(" "),e("h3",{attrs:{id:"conditional-compilation-api"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#conditional-compilation-api"}},[t._v("#")]),t._v(" Conditional compilation API")]),t._v(" "),e("p",[t._v("You can also use conditional compilation via the programmatic API. With the difference that the\nproperty name is "),e("code",[t._v("global_defs")]),t._v(" and is a compressor property:")]),t._v(" "),e("div",{staticClass:"language-javascript line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" result "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("minify")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fs"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("readFileSync")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"input.js"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"utf8"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    compress"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        dead_code"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        global_defs"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DEBUG")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br")])]),e("p",[t._v("To replace an identifier with an arbitrary non-constant expression it is\nnecessary to prefix the "),e("code",[t._v("global_defs")]),t._v(" key with "),e("code",[t._v('"@"')]),t._v(" to instruct Terser\nto parse the value as an expression:")]),t._v(" "),e("div",{staticClass:"language-javascript line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("minify")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"alert('hello');\"")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    compress"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        global_defs"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"@alert"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"console.log"')]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("code"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// returns: 'console.log(\"hello\");'")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br")])]),e("p",[t._v("Otherwise it would be replaced as string literal:")]),t._v(" "),e("div",{staticClass:"language-javascript line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("minify")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"alert('hello');\"")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    compress"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        global_defs"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"alert"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"console.log"')]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("code"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// returns: \'"console.log"("hello");\'')]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br")])]),e("h3",{attrs:{id:"annotations"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#annotations"}},[t._v("#")]),t._v(" Annotations")]),t._v(" "),e("p",[t._v("Annotations in Terser are a way to tell it to treat a certain function call differently. The following annotations are available:")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("/*@__INLINE__*/")]),t._v(" - forces a function to be inlined somewhere.")]),t._v(" "),e("li",[e("code",[t._v("/*@__NOINLINE__*/")]),t._v(" - Makes sure the called function is not inlined into the call site.")]),t._v(" "),e("li",[e("code",[t._v("/*@__PURE__*/")]),t._v(" - Marks a function call as pure. That means, it can safely be dropped.")])]),t._v(" "),e("p",[t._v("You can use either a "),e("code",[t._v("@")]),t._v(" sign at the start, or a "),e("code",[t._v("#")]),t._v(".")]),t._v(" "),e("p",[t._v("Here are some examples on how to use them:")]),t._v(" "),e("div",{staticClass:"language-javascript line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*@__INLINE__*/")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("function_always_inlined_here")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*#__NOINLINE__*/")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("function_cant_be_inlined_into_here")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" x "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*#__PURE__*/")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("i_am_dropped_if_x_is_not_used")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br")])]),e("h3",{attrs:{id:"estree-spidermonkey-ast"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#estree-spidermonkey-ast"}},[t._v("#")]),t._v(" ESTree / SpiderMonkey AST")]),t._v(" "),e("p",[t._v("Terser has its own abstract syntax tree format; for\n"),e("a",{attrs:{href:"http://lisperator.net/blog/uglifyjs-why-not-switching-to-spidermonkey-ast/",target:"_blank",rel:"noopener noreferrer"}},[t._v("practical reasons"),e("OutboundLink")],1),t._v("\nwe can't easily change to using the SpiderMonkey AST internally.  However,\nTerser now has a converter which can import a SpiderMonkey AST.")]),t._v(" "),e("p",[t._v("For example "),e("a",{attrs:{href:"https://github.com/ternjs/acorn",target:"_blank",rel:"noopener noreferrer"}},[t._v("Acorn"),e("OutboundLink")],1),t._v(" is a super-fast parser that produces a\nSpiderMonkey AST.  It has a small CLI utility that parses one file and dumps\nthe AST in JSON on the standard output.  To use Terser to mangle and\ncompress that:")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("acorn file.js | terser -p spidermonkey -m -c\n")])])]),e("p",[t._v("The "),e("code",[t._v("-p spidermonkey")]),t._v(" option tells Terser that all input files are not\nJavaScript, but JS code described in SpiderMonkey AST in JSON.  Therefore we\ndon't use our own parser in this case, but just transform that AST into our\ninternal AST.")]),t._v(" "),e("p",[e("code",[t._v("spidermonkey")]),t._v(" is also available in "),e("code",[t._v("minify")]),t._v(" as "),e("code",[t._v("parse")]),t._v(" and "),e("code",[t._v("format")]),t._v(" options to\naccept and/or produce a spidermonkey AST.")]),t._v(" "),e("h3",{attrs:{id:"use-acorn-for-parsing"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#use-acorn-for-parsing"}},[t._v("#")]),t._v(" Use Acorn for parsing")]),t._v(" "),e("p",[t._v("More for fun, I added the "),e("code",[t._v("-p acorn")]),t._v(" option which will use Acorn to do all\nthe parsing.  If you pass this option, Terser will "),e("code",[t._v('require("acorn")')]),t._v(".")]),t._v(" "),e("p",[t._v("Acorn is really fast (e.g. 250ms instead of 380ms on some 650K code), but\nconverting the SpiderMonkey tree that Acorn produces takes another 150ms so\nin total it's a bit more than just using Terser's own parser.")]),t._v(" "),e("h3",{attrs:{id:"terser-fast-minify-mode"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#terser-fast-minify-mode"}},[t._v("#")]),t._v(" Terser Fast Minify Mode")]),t._v(" "),e("p",[t._v("It's not well known, but whitespace removal and symbol mangling accounts\nfor 95% of the size reduction in minified code for most JavaScript - not\nelaborate code transforms. One can simply disable "),e("code",[t._v("compress")]),t._v(" to speed up\nTerser builds by 3 to 4 times.")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("d3.js")]),t._v(" "),e("th",{staticStyle:{"text-align":"right"}},[t._v("size")]),t._v(" "),e("th",{staticStyle:{"text-align":"right"}},[t._v("gzip size")]),t._v(" "),e("th",{staticStyle:{"text-align":"right"}},[t._v("time (s)")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("original")]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("451,131")]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("108,733")]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("-")])]),t._v(" "),e("tr",[e("td",[t._v("terser@3.7.5 mangle=false, compress=false")]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("316,600")]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("85,245")]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("0.82")])]),t._v(" "),e("tr",[e("td",[t._v("terser@3.7.5 mangle=true, compress=false")]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("220,216")]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("72,730")]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("1.45")])]),t._v(" "),e("tr",[e("td",[t._v("terser@3.7.5 mangle=true, compress=true")]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("212,046")]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("70,954")]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("5.87")])]),t._v(" "),e("tr",[e("td",[t._v("babili@0.1.4")]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("210,713")]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("72,140")]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("12.64")])]),t._v(" "),e("tr",[e("td",[t._v("babel-minify@0.4.3")]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("210,321")]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("72,242")]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("48.67")])]),t._v(" "),e("tr",[e("td",[t._v("babel-minify@0.5.0-alpha.01eac1c3")]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("210,421")]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("72,238")]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("14.17")])])])]),t._v(" "),e("p",[t._v("To enable fast minify mode from the CLI use:")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("terser file.js -m\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[t._v("To enable fast minify mode with the API use:")]),t._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("minify")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("code"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" compress"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" mangle"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("h4",{attrs:{id:"source-maps-and-debugging"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#source-maps-and-debugging"}},[t._v("#")]),t._v(" Source maps and debugging")]),t._v(" "),e("p",[t._v("Various "),e("code",[t._v("compress")]),t._v(" transforms that simplify, rearrange, inline and remove code\nare known to have an adverse effect on debugging with source maps. This is\nexpected as code is optimized and mappings are often simply not possible as\nsome code no longer exists. For highest fidelity in source map debugging\ndisable the "),e("code",[t._v("compress")]),t._v(" option and just use "),e("code",[t._v("mangle")]),t._v(".")]),t._v(" "),e("h3",{attrs:{id:"compiler-assumptions"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#compiler-assumptions"}},[t._v("#")]),t._v(" Compiler assumptions")]),t._v(" "),e("p",[t._v("To allow for better optimizations, the compiler makes various assumptions:")]),t._v(" "),e("ul",[e("li",[e("code",[t._v(".toString()")]),t._v(" and "),e("code",[t._v(".valueOf()")]),t._v(" don't have side effects, and for built-in\nobjects they have not been overridden.")]),t._v(" "),e("li",[e("code",[t._v("undefined")]),t._v(", "),e("code",[t._v("NaN")]),t._v(" and "),e("code",[t._v("Infinity")]),t._v(" have not been externally redefined.")]),t._v(" "),e("li",[e("code",[t._v("arguments.callee")]),t._v(", "),e("code",[t._v("arguments.caller")]),t._v(" and "),e("code",[t._v("Function.prototype.caller")]),t._v(" are not used.")]),t._v(" "),e("li",[t._v("The code doesn't expect the contents of "),e("code",[t._v("Function.prototype.toString()")]),t._v(" or\n"),e("code",[t._v("Error.prototype.stack")]),t._v(" to be anything in particular.")]),t._v(" "),e("li",[t._v("Getting and setting properties on a plain object does not cause other side effects\n(using "),e("code",[t._v(".watch()")]),t._v(" or "),e("code",[t._v("Proxy")]),t._v(").")]),t._v(" "),e("li",[t._v("Object properties can be added, removed and modified (not prevented with\n"),e("code",[t._v("Object.defineProperty()")]),t._v(", "),e("code",[t._v("Object.defineProperties()")]),t._v(", "),e("code",[t._v("Object.freeze()")]),t._v(",\n"),e("code",[t._v("Object.preventExtensions()")]),t._v(" or "),e("code",[t._v("Object.seal()")]),t._v(").")]),t._v(" "),e("li",[e("code",[t._v("document.all")]),t._v(" is not "),e("code",[t._v("== null")])]),t._v(" "),e("li",[t._v("Assigning properties to a class doesn't have side effects and does not throw.")])]),t._v(" "),e("h3",{attrs:{id:"build-tools-and-adaptors-using-terser"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#build-tools-and-adaptors-using-terser"}},[t._v("#")]),t._v(" Build Tools and Adaptors using Terser")]),t._v(" "),e("p",[t._v("https://www.npmjs.com/browse/depended/terser")]),t._v(" "),e("h3",{attrs:{id:"replacing-uglify-es-with-terser-in-a-project-using-yarn"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#replacing-uglify-es-with-terser-in-a-project-using-yarn"}},[t._v("#")]),t._v(" Replacing "),e("code",[t._v("uglify-es")]),t._v(" with "),e("code",[t._v("terser")]),t._v(" in a project using "),e("code",[t._v("yarn")])]),t._v(" "),e("p",[t._v("A number of JS bundlers and uglify wrappers are still using buggy versions\nof "),e("code",[t._v("uglify-es")]),t._v(" and have not yet upgraded to "),e("code",[t._v("terser")]),t._v(". If you are using "),e("code",[t._v("yarn")]),t._v("\nyou can add the following alias to your project's "),e("code",[t._v("package.json")]),t._v(" file:")]),t._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("  "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"resolutions"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"uglify-es"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"npm:terser"')]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("p",[t._v("to use "),e("code",[t._v("terser")]),t._v(" instead of "),e("code",[t._v("uglify-es")]),t._v(" in all deeply nested dependencies\nwithout changing any code.")]),t._v(" "),e("p",[t._v("Note: for this change to take effect you must run the following commands\nto remove the existing "),e("code",[t._v("yarn")]),t._v(" lock file and reinstall all packages:")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$ rm -rf node_modules yarn.lock\n$ yarn\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br")])]),t._v(" "),e("h1",{attrs:{id:"reporting-issues"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#reporting-issues"}},[t._v("#")]),t._v(" Reporting issues")]),t._v(" "),e("p",[t._v("In the terser CLI we use "),e("a",{attrs:{href:"https://npmjs.com/source-map-support",target:"_blank",rel:"noopener noreferrer"}},[t._v("source-map-support"),e("OutboundLink")],1),t._v(" to produce good error stacks. In your own app, you're expected to enable source-map-support (read their docs) to have nice stack traces that will help you write good issues.")]),t._v(" "),e("h1",{attrs:{id:"readme-md-patrons"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#readme-md-patrons"}},[t._v("#")]),t._v(" README.md Patrons:")]),t._v(" "),e("p",[e("em",[t._v("note")]),t._v(": You can support this project on patreon: "),e("a",{attrs:{target:"_blank",rel:"nofollow",href:"https://www.patreon.com/fabiosantoscode"}},[e("img",{attrs:{src:"https://c5.patreon.com/external/logo/become_a_patron_button@2x.png",alt:"patron",width:"100px",height:"auto"}})]),t._v(". Check out "),e("a",{attrs:{href:"https://github.com/terser/terser/blob/master/PATRONS.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("PATRONS.md"),e("OutboundLink")],1),t._v(" for our first-tier patrons.")]),t._v(" "),e("p",[t._v("These are the second-tier patrons. Great thanks for your support!")]),t._v(" "),e("ul",[e("li",[t._v("CKEditor "),e("img",{attrs:{src:"https://c10.patreonusercontent.com/3/eyJoIjoxMDAsInciOjEwMH0%3D/patreon-media/p/user/15452278/f8548dcf48d740619071e8d614459280/1?token-time=2145916800&token-hash=SIQ54PhIPHv3M7CVz9LxS8_8v4sOw4H304HaXsXj8MM%3D",alt:""}})]),t._v(" "),e("li",[t._v("38elements "),e("img",{attrs:{src:"https://c10.patreonusercontent.com/3/eyJ3IjoyMDB9/patreon-media/p/user/12501844/88e7fc5dd62d45c6a5626533bbd48cfb/1?token-time=2145916800&token-hash=c3AsQ5T0IQWic0zKxFHu-bGGQJkXQFvafvJ4bPerFR4%3D",alt:""}})])]),t._v(" "),e("h2",{attrs:{id:"contributors"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#contributors"}},[t._v("#")]),t._v(" Contributors")]),t._v(" "),e("h3",{attrs:{id:"code-contributors"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#code-contributors"}},[t._v("#")]),t._v(" Code Contributors")]),t._v(" "),e("p",[t._v("This project exists thanks to all the people who contribute. ["),e("RouterLink",{attrs:{to:"/__tests__/webpack/optimization/node_modules/terser/CONTRIBUTING.html"}},[t._v("Contribute")]),t._v("].\n"),e("a",{attrs:{href:"https://github.com/terser/terser/graphs/contributors"}},[e("img",{attrs:{src:"https://opencollective.com/terser/contributors.svg?width=890&button=false"}})])],1),t._v(" "),e("h3",{attrs:{id:"financial-contributors"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#financial-contributors"}},[t._v("#")]),t._v(" Financial Contributors")]),t._v(" "),e("p",[t._v("Become a financial contributor and help us sustain our community. ["),e("a",{attrs:{href:"https://opencollective.com/terser/contribute",target:"_blank",rel:"noopener noreferrer"}},[t._v("Contribute"),e("OutboundLink")],1),t._v("]")]),t._v(" "),e("h4",{attrs:{id:"individuals"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#individuals"}},[t._v("#")]),t._v(" Individuals")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://opencollective.com/terser"}},[e("img",{attrs:{src:"https://opencollective.com/terser/individuals.svg?width=890"}})])]),t._v(" "),e("h4",{attrs:{id:"organizations"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#organizations"}},[t._v("#")]),t._v(" Organizations")]),t._v(" "),e("p",[t._v("Support this project with your organization. Your logo will show up here with a link to your website. ["),e("a",{attrs:{href:"https://opencollective.com/terser/contribute",target:"_blank",rel:"noopener noreferrer"}},[t._v("Contribute"),e("OutboundLink")],1),t._v("]")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://opencollective.com/terser/organization/0/website"}},[e("img",{attrs:{src:"https://opencollective.com/terser/organization/0/avatar.svg"}})]),t._v(" "),e("a",{attrs:{href:"https://opencollective.com/terser/organization/1/website"}},[e("img",{attrs:{src:"https://opencollective.com/terser/organization/1/avatar.svg"}})]),t._v(" "),e("a",{attrs:{href:"https://opencollective.com/terser/organization/2/website"}},[e("img",{attrs:{src:"https://opencollective.com/terser/organization/2/avatar.svg"}})]),t._v(" "),e("a",{attrs:{href:"https://opencollective.com/terser/organization/3/website"}},[e("img",{attrs:{src:"https://opencollective.com/terser/organization/3/avatar.svg"}})]),t._v(" "),e("a",{attrs:{href:"https://opencollective.com/terser/organization/4/website"}},[e("img",{attrs:{src:"https://opencollective.com/terser/organization/4/avatar.svg"}})]),t._v(" "),e("a",{attrs:{href:"https://opencollective.com/terser/organization/5/website"}},[e("img",{attrs:{src:"https://opencollective.com/terser/organization/5/avatar.svg"}})]),t._v(" "),e("a",{attrs:{href:"https://opencollective.com/terser/organization/6/website"}},[e("img",{attrs:{src:"https://opencollective.com/terser/organization/6/avatar.svg"}})]),t._v(" "),e("a",{attrs:{href:"https://opencollective.com/terser/organization/7/website"}},[e("img",{attrs:{src:"https://opencollective.com/terser/organization/7/avatar.svg"}})]),t._v(" "),e("a",{attrs:{href:"https://opencollective.com/terser/organization/8/website"}},[e("img",{attrs:{src:"https://opencollective.com/terser/organization/8/avatar.svg"}})]),t._v(" "),e("a",{attrs:{href:"https://opencollective.com/terser/organization/9/website"}},[e("img",{attrs:{src:"https://opencollective.com/terser/organization/9/avatar.svg"}})])])])}),[],!1,null,null,null);s.default=n.exports}}]);