(window.webpackJsonp=window.webpackJsonp||[]).push([[146],{649:function(e,s,t){"use strict";t.r(s);var a=t(5),r=Object(a.a)({},(function(){var e=this,s=e.$createElement,t=e._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"webpack-sources"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#webpack-sources"}},[e._v("#")]),e._v(" webpack-sources")]),e._v(" "),t("p",[e._v("Contains multiple classes which represent a "),t("code",[e._v("Source")]),e._v(". A "),t("code",[e._v("Source")]),e._v(" can be asked for source code, size, source map and hash.")]),e._v(" "),t("h2",{attrs:{id:"source"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#source"}},[e._v("#")]),e._v(" "),t("code",[e._v("Source")])]),e._v(" "),t("p",[e._v("Base class for all sources.")]),e._v(" "),t("h3",{attrs:{id:"public-methods"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#public-methods"}},[e._v("#")]),e._v(" Public methods")]),e._v(" "),t("p",[e._v("All methods should be considered as expensive as they may need to do computations.")]),e._v(" "),t("h4",{attrs:{id:"source-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#source-2"}},[e._v("#")]),e._v(" "),t("code",[e._v("source")])]),e._v(" "),t("div",{staticClass:"language-typescript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-typescript"}},[t("code",[e._v("Source"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("prototype"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("source")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" String "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" Buffer\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("Returns the represented source code as string or Buffer (for binary Sources).")]),e._v(" "),t("h4",{attrs:{id:"buffer"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#buffer"}},[e._v("#")]),e._v(" "),t("code",[e._v("buffer")])]),e._v(" "),t("div",{staticClass:"language-typescript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-typescript"}},[t("code",[e._v("Source"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("prototype"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("buffer")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" Buffer\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("Returns the represented source code as Buffer. Strings are converted to utf-8.")]),e._v(" "),t("h4",{attrs:{id:"size"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#size"}},[e._v("#")]),e._v(" "),t("code",[e._v("size")])]),e._v(" "),t("div",{staticClass:"language-typescript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-typescript"}},[t("code",[e._v("Source"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("prototype"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("size")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" Number\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("Returns the size in bytes of the represented source code.")]),e._v(" "),t("h4",{attrs:{id:"map"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#map"}},[e._v("#")]),e._v(" "),t("code",[e._v("map")])]),e._v(" "),t("div",{staticClass:"language-typescript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-typescript"}},[t("code",[e._v("Source"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("prototype"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("map")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("options"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("?")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" Object"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" Object "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("null")]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("Returns the SourceMap of the represented source code as JSON. May return "),t("code",[e._v("null")]),e._v(" if no SourceMap is available.")]),e._v(" "),t("p",[e._v("The "),t("code",[e._v("options")]),e._v(" object can contain the following keys:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("columns: Boolean")]),e._v(" (default "),t("code",[e._v("true")]),e._v("): If set to false the implementation may omit mappings for columns.")])]),e._v(" "),t("h4",{attrs:{id:"sourceandmap"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#sourceandmap"}},[e._v("#")]),e._v(" "),t("code",[e._v("sourceAndMap")])]),e._v(" "),t("div",{staticClass:"language-typescript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-typescript"}},[t("code",[e._v("Source"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("prototype"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("sourceAndMap")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("options"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("?")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" Object"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n\tsource"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" String "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" Buffer"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n\tmap"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" Object "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("null")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br")])]),t("p",[e._v("Returns both, source code (like "),t("code",[e._v("Source.prototype.source()")]),e._v(" and SourceMap (like "),t("code",[e._v("Source.prototype.map()")]),e._v("). This method could have better performance than calling "),t("code",[e._v("source()")]),e._v(" and "),t("code",[e._v("map()")]),e._v(" separately.")]),e._v(" "),t("p",[e._v("See "),t("code",[e._v("map()")]),e._v(" for "),t("code",[e._v("options")]),e._v(".")]),e._v(" "),t("h4",{attrs:{id:"updatehash"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#updatehash"}},[e._v("#")]),e._v(" "),t("code",[e._v("updateHash")])]),e._v(" "),t("div",{staticClass:"language-typescript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-typescript"}},[t("code",[e._v("Source"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("prototype"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("updateHash")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("hash"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" Hash"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("void")]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("Updates the provided "),t("code",[e._v("Hash")]),e._v(" object with the content of the represented source code. ("),t("code",[e._v("Hash")]),e._v(" is an object with an "),t("code",[e._v("update")]),e._v(" method, which is called with string values)")]),e._v(" "),t("h2",{attrs:{id:"rawsource"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#rawsource"}},[e._v("#")]),e._v(" "),t("code",[e._v("RawSource")])]),e._v(" "),t("p",[e._v("Represents source code without SourceMap.")]),e._v(" "),t("div",{staticClass:"language-typescript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-typescript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("new")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("RawSource")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("sourceCode"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" String "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" Buffer"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("h2",{attrs:{id:"originalsource"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#originalsource"}},[e._v("#")]),e._v(" "),t("code",[e._v("OriginalSource")])]),e._v(" "),t("p",[e._v("Represents source code, which is a copy of the original file.")]),e._v(" "),t("div",{staticClass:"language-typescript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-typescript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("new")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("OriginalSource")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("\n\tsourceCode"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" String "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" Buffer"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n\tname"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" String\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br")])]),t("ul",[t("li",[t("code",[e._v("sourceCode")]),e._v(": The source code.")]),e._v(" "),t("li",[t("code",[e._v("name")]),e._v(": The filename of the original source code.")])]),e._v(" "),t("p",[e._v("OriginalSource tries to create column mappings if requested, by splitting the source code at typical statement borders ("),t("code",[e._v(";")]),e._v(", "),t("code",[e._v("{")]),e._v(", "),t("code",[e._v("}")]),e._v(").")]),e._v(" "),t("h2",{attrs:{id:"sourcemapsource"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#sourcemapsource"}},[e._v("#")]),e._v(" "),t("code",[e._v("SourceMapSource")])]),e._v(" "),t("p",[e._v("Represents source code with SourceMap, optionally having an additional SourceMap for the original source.")]),e._v(" "),t("div",{staticClass:"language-typescript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-typescript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("new")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("SourceMapSource")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("\n\tsourceCode"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" String "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" Buffer"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n\tname"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" String"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n\tsourceMap"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" Object "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" String "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" Buffer"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n\toriginalSource"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("?")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" String "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" Buffer"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n\tinnerSourceMap"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("?")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" Object "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" String "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" Buffer"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n\tremoveOriginalSource"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("?")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[e._v("boolean")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br")])]),t("ul",[t("li",[t("code",[e._v("sourceCode")]),e._v(": The source code.")]),e._v(" "),t("li",[t("code",[e._v("name")]),e._v(": The filename of the original source code.")]),e._v(" "),t("li",[t("code",[e._v("sourceMap")]),e._v(": The SourceMap for the source code.")]),e._v(" "),t("li",[t("code",[e._v("originalSource")]),e._v(": The source code of the original file. Can be omitted if the "),t("code",[e._v("sourceMap")]),e._v(" already contains the original source code.")]),e._v(" "),t("li",[t("code",[e._v("innerSourceMap")]),e._v(": The SourceMap for the "),t("code",[e._v("originalSource")]),e._v("/"),t("code",[e._v("name")]),e._v(".")]),e._v(" "),t("li",[t("code",[e._v("removeOriginalSource")]),e._v(": Removes the source code for "),t("code",[e._v("name")]),e._v(" from the final map, keeping only the deeper mappings for that file.")])]),e._v(" "),t("p",[e._v("The "),t("code",[e._v("SourceMapSource")]),e._v(' supports "identity" mappings for the '),t("code",[e._v("innerSourceMap")]),e._v(".\nWhen original source matches generated source for a mapping it's assumed to be mapped char by char allowing to keep finer mappings from "),t("code",[e._v("sourceMap")]),e._v(".")]),e._v(" "),t("h2",{attrs:{id:"cachedsource"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cachedsource"}},[e._v("#")]),e._v(" "),t("code",[e._v("CachedSource")])]),e._v(" "),t("p",[e._v("Decorates a "),t("code",[e._v("Source")]),e._v(" and caches returned results of "),t("code",[e._v("map")]),e._v(", "),t("code",[e._v("source")]),e._v(", "),t("code",[e._v("buffer")]),e._v(", "),t("code",[e._v("size")]),e._v(" and "),t("code",[e._v("sourceAndMap")]),e._v(" in memory. "),t("code",[e._v("updateHash")]),e._v(" is not cached.\nIt tries to reused cached results from other methods to avoid calculations, i. e. when "),t("code",[e._v("source")]),e._v(" is already cached, calling "),t("code",[e._v("size")]),e._v(" will get the size from the cached source, calling "),t("code",[e._v("sourceAndMap")]),e._v(" will only call "),t("code",[e._v("map")]),e._v(" on the wrapped Source.")]),e._v(" "),t("div",{staticClass:"language-typescript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-typescript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("new")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("CachedSource")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("source"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" Source"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("new")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("CachedSource")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("source"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" Source "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=>")]),e._v(" Source"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" cachedData"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("?")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" CachedData"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br")])]),t("p",[e._v("Instead of passing a "),t("code",[e._v("Source")]),e._v(" object directly one can pass an function that returns a "),t("code",[e._v("Source")]),e._v(" object. The function is only called when needed and once.")]),e._v(" "),t("h3",{attrs:{id:"public-methods-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#public-methods-2"}},[e._v("#")]),e._v(" Public methods")]),e._v(" "),t("h4",{attrs:{id:"getcacheddata"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#getcacheddata"}},[e._v("#")]),e._v(" "),t("code",[e._v("getCachedData()")])]),e._v(" "),t("p",[e._v("Returns the cached data for passing to the constructor. All cached entries are converted to Buffers and strings are avoided.")]),e._v(" "),t("h4",{attrs:{id:"original"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#original"}},[e._v("#")]),e._v(" "),t("code",[e._v("original()")])]),e._v(" "),t("p",[e._v("Returns the original "),t("code",[e._v("Source")]),e._v(" object.")]),e._v(" "),t("h4",{attrs:{id:"originallazy"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#originallazy"}},[e._v("#")]),e._v(" "),t("code",[e._v("originalLazy()")])]),e._v(" "),t("p",[e._v("Returns the original "),t("code",[e._v("Source")]),e._v(" object or a function returning these.")]),e._v(" "),t("h2",{attrs:{id:"prefixsource"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#prefixsource"}},[e._v("#")]),e._v(" "),t("code",[e._v("PrefixSource")])]),e._v(" "),t("p",[e._v("Prefix every line of the decorated "),t("code",[e._v("Source")]),e._v(" with a provided string.")]),e._v(" "),t("div",{staticClass:"language-typescript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-typescript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("new")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("PrefixSource")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("\n\tprefix"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" String"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n\tsource"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" Source "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" String "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" Buffer\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br")])]),t("h2",{attrs:{id:"concatsource"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#concatsource"}},[e._v("#")]),e._v(" "),t("code",[e._v("ConcatSource")])]),e._v(" "),t("p",[e._v("Concatenate multiple "),t("code",[e._v("Source")]),e._v("s or strings to a single source.")]),e._v(" "),t("div",{staticClass:"language-typescript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-typescript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("new")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("ConcatSource")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("\n\t"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("...")]),e._v("items"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("?")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" Source "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" String\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br")])]),t("h3",{attrs:{id:"public-methods-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#public-methods-3"}},[e._v("#")]),e._v(" Public methods")]),e._v(" "),t("h4",{attrs:{id:"add"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#add"}},[e._v("#")]),e._v(" "),t("code",[e._v("add")])]),e._v(" "),t("div",{staticClass:"language-typescript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-typescript"}},[t("code",[e._v("ConcatSource"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("prototype"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("add")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("item"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" Source "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" String"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("Adds an item to the source.")]),e._v(" "),t("h2",{attrs:{id:"replacesource"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#replacesource"}},[e._v("#")]),e._v(" "),t("code",[e._v("ReplaceSource")])]),e._v(" "),t("p",[e._v("Decorates a "),t("code",[e._v("Source")]),e._v(" with replacements and insertions of source code.")]),e._v(" "),t("p",[e._v("The "),t("code",[e._v("ReplaceSource")]),e._v(' supports "identity" mappings for child source.\nWhen original source matches generated source for a mapping it\'s assumed to be mapped char by char allowing to split mappings at replacements/insertions.')]),e._v(" "),t("h3",{attrs:{id:"public-methods-4"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#public-methods-4"}},[e._v("#")]),e._v(" Public methods")]),e._v(" "),t("h4",{attrs:{id:"replace"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#replace"}},[e._v("#")]),e._v(" "),t("code",[e._v("replace")])]),e._v(" "),t("div",{staticClass:"language-typescript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-typescript"}},[t("code",[e._v("ReplaceSource"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("prototype"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("replace")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("\n\tstart"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" Number"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n\tend"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" Number"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n\treplacement"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" String\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br")])]),t("p",[e._v("Replaces chars from "),t("code",[e._v("start")]),e._v(" (0-indexed, inclusive) to "),t("code",[e._v("end")]),e._v(" (0-indexed, inclusive) with "),t("code",[e._v("replacement")]),e._v(".")]),e._v(" "),t("p",[e._v("Locations represents locations in the original source and are not influenced by other replacements or insertions.")]),e._v(" "),t("h4",{attrs:{id:"insert"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#insert"}},[e._v("#")]),e._v(" "),t("code",[e._v("insert")])]),e._v(" "),t("div",{staticClass:"language-typescript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-typescript"}},[t("code",[e._v("ReplaceSource"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("prototype"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("insert")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("\n\tpos"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" Number"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n\tinsertion"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" String\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br")])]),t("p",[e._v("Inserts the "),t("code",[e._v("insertion")]),e._v(" before char "),t("code",[e._v("pos")]),e._v(" (0-indexed).")]),e._v(" "),t("p",[e._v("Location represents location in the original source and is not influenced by other replacements or insertions.")]),e._v(" "),t("h4",{attrs:{id:"original-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#original-2"}},[e._v("#")]),e._v(" "),t("code",[e._v("original")])]),e._v(" "),t("p",[e._v("Get decorated "),t("code",[e._v("Source")]),e._v(".")]),e._v(" "),t("h2",{attrs:{id:"compatsource"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#compatsource"}},[e._v("#")]),e._v(" "),t("code",[e._v("CompatSource")])]),e._v(" "),t("p",[e._v("Converts a Source-like object into a real Source object.")]),e._v(" "),t("h3",{attrs:{id:"public-methods-5"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#public-methods-5"}},[e._v("#")]),e._v(" Public methods")]),e._v(" "),t("h4",{attrs:{id:"static-from"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#static-from"}},[e._v("#")]),e._v(" static "),t("code",[e._v("from")])]),e._v(" "),t("div",{staticClass:"language-typescript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-typescript"}},[t("code",[e._v("CompatSource"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("from")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("sourceLike"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[e._v("any")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" Source"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("If "),t("code",[e._v("sourceLike")]),e._v(" is a real Source it returns it unmodified. Otherwise it returns it wrapped in a CompatSource.")])])}),[],!1,null,null,null);s.default=r.exports}}]);