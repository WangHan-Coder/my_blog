(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{438:function(i,_,v){"use strict";v.r(_);var l=v(1),t=Object(l.a)({},(function(){var i=this,_=i._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":i.$parent.slotKey}},[_("h1",{attrs:{id:"脚手架hb-cli"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#脚手架hb-cli"}},[i._v("#")]),i._v(" 脚手架hb-cli")]),i._v(" "),_("p",[i._v("脚手架：一个在操作系统上的客户端")]),i._v(" "),_("h2",{attrs:{id:"开发背景"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#开发背景"}},[i._v("#")]),i._v(" 开发背景")]),i._v(" "),_("ol",[_("li",[i._v("创建项目有需要大量拷贝文件（项目配置、组件库、公共方法、请求封装、组件库等等），效率低而且同步比较麻烦")]),i._v(" "),_("li",[i._v("协同操作，git操作不规范，分支混乱，操作耗时")])]),i._v(" "),_("h2",{attrs:{id:"架构设计"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#架构设计"}},[i._v("#")]),i._v(" 架构设计")]),i._v(" "),_("ol",[_("li",[i._v("分包")])]),i._v(" "),_("ul",[_("li",[i._v("@hb-cli/core 脚手架启动，命令注册")]),i._v(" "),_("li",[i._v("@hb-cli/exec 动态下载/更新package，并使用子进程执行package")]),i._v(" "),_("li",[i._v("@hb-cli/package npm包管理，提供下载/更新package功能")]),i._v(" "),_("li",[i._v("@hb-cli/init init命令逻辑，创建项目")]),i._v(" "),_("li",[i._v("@hb-cli/publish 发布项目 git自动化流程 + 云构建和云发布")]),i._v(" "),_("li",[i._v("@hb-cli/git 封装git自动化操作")]),i._v(" "),_("li",[i._v("@hb-cli/command 封装command执行流程 提供init exec两个方法让子类实现")]),i._v(" "),_("li",[i._v("@hb-cli/utils 工具方法")]),i._v(" "),_("li",[i._v("@hb-cli/log 封装日志打印功能")]),i._v(" "),_("li",[i._v("@hb-cli/npm-info 封装npm操作")])]),i._v(" "),_("p",[i._v("@hb-cli/core：")]),i._v(" "),_("ol",[_("li",[_("p",[i._v("prepare")]),i._v(" "),_("ul",[_("li",[i._v("检查版本号")]),i._v(" "),_("li",[i._v("权限检查root启动 root-check 权限降级")]),i._v(" "),_("li",[i._v("用户主目录检查")]),i._v(" "),_("li",[i._v("检查环境变量")]),i._v(" "),_("li",[i._v("node版本检查")]),i._v(" "),_("li",[i._v("检查cli版本号")])])]),i._v(" "),_("li",[_("p",[i._v("registerCommand")]),i._v(" "),_("ul",[_("li",[i._v("init")]),i._v(" "),_("li",[i._v("publish")]),i._v(" "),_("li",[i._v("deploy")])])])]),i._v(" "),_("p",[i._v("整体流程：@hb-cli/core -> @hb-cli/exec -> hb-cli/package -> @hb-cli/init @hb-cli/publish @hb-cli/deploy")]),i._v(" "),_("p",[i._v("git自动化流程：")]),i._v(" "),_("ol",[_("li",[i._v("prepare（自动化提交准备和仓库初始化）\n"),_("ul",[_("li",[i._v("检查缓存主目录，.hb-cli\n"),_("ul",[_("li",[i._v("在主目录下新建.git文件\n"),_("ul",[_("li",[i._v(".git_token 缓存token信息")]),i._v(" "),_("li",[i._v(".git_own 缓存远程仓库类型：个人/组织")]),i._v(" "),_("li",[i._v(".git_login 缓存登录信息：个人/某个组织")])])])])]),i._v(" "),_("li",[i._v("检查用户远程仓库类型")]),i._v(" "),_("li",[i._v("获取远程仓库Token")]),i._v(" "),_("li",[i._v("获取远程用户和组织信息")]),i._v(" "),_("li",[i._v("检查并创建远程仓库")]),i._v(" "),_("li",[i._v("检查并创建.gitignore文件")]),i._v(" "),_("li",[i._v("完成本地仓库初始化（检查源码根目录是否存在.git文件，GIT_ROOT_DIR = .git 如果存在则证明git已经完成初始化，跳过添加远程仓库和initCommit阶段）")]),i._v(" "),_("li",[i._v("git初始化并添加远程remote")]),i._v(" "),_("li",[i._v("initCommit，包括检查冲突，检查not-committed，合并远程online")])])]),i._v(" "),_("li",[i._v("commit（代码自动化提交）\n"),_("ul",[_("li",[i._v("生成开发分支\n"),_("ul",[_("li",[i._v("获取远程开发分支")]),i._v(" "),_("li",[i._v("生成本地开发分支\n"),_("ul",[_("li",[i._v("当前版本要大于线上最新版本，也就是devVersion >= releaseVersion，如果不大于，需要进行版本升级（大版本major，中版本minor，小版本patch）")])])]),i._v(" "),_("li",[i._v("将version同步到package.json")])])]),i._v(" "),_("li",[i._v("检查stash区")]),i._v(" "),_("li",[i._v("检查代码冲突")]),i._v(" "),_("li",[i._v("切换开发分支")]),i._v(" "),_("li",[i._v("合并远程online分支代码和开发分支代码")]),i._v(" "),_("li",[i._v("将开发分支代码推送到远程仓库")])])])])])}),[],!1,null,null,null);_.default=t.exports}}]);