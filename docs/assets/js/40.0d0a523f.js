(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{548:function(t,a,s){"use strict";s.r(a);var e=s(5),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"单元测试"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#单元测试"}},[t._v("#")]),t._v(" 单元测试")]),t._v(" "),s("h2",{attrs:{id:"重要性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#重要性"}},[t._v("#")]),t._v(" 重要性")]),t._v(" "),s("ol",[s("li",[t._v("保证研发质量")]),t._v(" "),s("li",[t._v("提高项目稳定性\n自以为改动一个很小的地方，不会影响其它地方，然后就发布上线了，这就意味着发新版本以后让用户来帮你做测试，每次版本更新后，都有可能带来一个未知的bug，这是很可怕的。")]),t._v(" "),s("li",[t._v("提高开发速度\n短期会拖累开发速度，但长期来看，有了单元测试，后续迭代需求，每次commit代码时都可以跑一遍单测，如果有问题可以及时发现更改，防止等待版本快要上线时或者已经上线之后才发现。")])]),t._v(" "),s("h2",{attrs:{id:"哪些地方需要写单元测试"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#哪些地方需要写单元测试"}},[t._v("#")]),t._v(" 哪些地方需要写单元测试")]),t._v(" "),s("p",[t._v("业务开发的话，可以选择性写代码测试，对工具类的函数库，通用类的组件等写单元测试，而开源的话，单测要覆盖到几乎所有代码。")]),t._v(" "),s("h2",{attrs:{id:"使用方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用方式"}},[t._v("#")]),t._v(" 使用方式")]),t._v(" "),s("ul",[s("li",[t._v("jest或mocha")]),t._v(" "),s("li",[t._v("@vue/test-utils")]),t._v(" "),s("li",[t._v("sinon")])]),t._v(" "),s("p",[t._v("describe: 测试集 第一个参数是名称，第二个参数是一个方法，里面写单元测试\n每一个it 是单测的最小集")])])}),[],!1,null,null,null);a.default=r.exports}}]);