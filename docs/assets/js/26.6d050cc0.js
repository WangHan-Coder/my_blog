(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{441:function(s,t,a){"use strict";a.r(t);var n=a(1),r=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("p",[s._v("javascript中的对象是一组组属性和值的集合，类似于数据结构中的"),t("strong",[s._v("字典")]),s._v("，字符串作为键名，任意对象可作为键值，通过键名可以读取键值。")]),s._v(" "),t("p",[s._v("不过V8在实现对象存储的时候。并没有采取字典这种存储结构，因为字典是"),t("strong",[s._v("非线性")]),s._v("的存储结构，查询效率较低。")]),s._v(" "),t("p",[s._v("这里提到了两个概念：")]),s._v(" "),t("ol",[t("li",[s._v("字典")])]),s._v(" "),t("p",[s._v("字典（dictionary）是一些元素的集合。每个元素有一个称作key的域，不同元素的key各不相同，其操作有查询、插入和删除。")]),s._v(" "),t("ol",{attrs:{start:"2"}},[t("li",[s._v("非线性结构")])]),s._v(" "),t("p",[s._v("线性结构的特点是"),t("strong",[s._v("存储连续")]),s._v("，每个位置之间的偏移量固定，通过线性结构的首位和对应位置的下标就可以算出数据存储的位置，假设首位的位置为s，每个位置的偏移量为8，索引为i，那么这个线性结构任意位置的的计算公式为：")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[s._v("p "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" s "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("  i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("这也是索引值从0开始的原因之一，因为如果从1开始的话公式就变为p = s +  (i - 1)* 8，多了一次减运算。线性结构的代表为数组、队列、栈等。")]),s._v(" "),t("p",[s._v("非线性结构的特点是"),t("strong",[s._v("零散分布")]),s._v("，比如堆、链表、字典等。")]),s._v(" "),t("p",[s._v("线性结构由于存储连续，虽然查询快，但是能存储的容量有限，因为在内存中很难找到一块很大的连续空间。非线性结构虽然查询慢，但能存储的数据量大。")]),s._v(" "),t("p",[s._v("为了提高效率，v8采用了一套复杂的存储策略。我们来看看v8到底是如何访问对象中的属性的？")]),s._v(" "),t("p",[s._v("首先，要对属性进行分类。")]),s._v(" "),t("ol",[t("li",[s._v("根据属性类型的不同，可分为"),t("strong",[s._v("排序属性")]),s._v("和"),t("strong",[s._v("常规属性")]),s._v("。")])]),s._v(" "),t("h2",{attrs:{id:"排序属性-elements-和常规属性-properties"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#排序属性-elements-和常规属性-properties"}},[s._v("#")]),s._v(" 排序属性（elements）和常规属性（properties）")]),s._v(" "),t("p",[s._v("我们把对象中的数组属性称为"),t("strong",[s._v("排序属性")]),s._v("，字符串属性称为"),t("strong",[s._v("常规属性")]),s._v("。根据ECMAScript规范，"),t("strong",[s._v("数字属性应该按照索引值大小升序排列，字符串属性应根据创建时间升序排列。")])]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("Factory")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'3'")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'c'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'test-c'")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'1'")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'a'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'test-a'")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'h'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'test-h'")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'2'")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'b'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'test-b'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" foo "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Factory")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" key "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" foo"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("key"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 打印结果")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n1\n2\n3\nc\na\nh\nb\n*/")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br")])]),t("p",[s._v("为了提高存储和访问性能，v8采用了两个"),t("strong",[s._v("线性结构")]),s._v("来分别保存排序属性和常规属性，具体结构如下图所示：\n"),t("img",{attrs:{src:s.$withBase("/js/v8/v8内部的对象构造.svg"),alt:"图片加载失败"}})]),s._v(" "),t("p",[s._v("如果执行遍历操作，v8会先从elements属性中按照顺序读取所有的元素，然后再在properties属性中读取所有的元素。")]),s._v(" "),t("p",[s._v("增加了elements属性和properties属性后，无疑是简化了程序的复杂度，但却增加了一层属性读取，反而降低了访问速度，于是v8推出了块、慢属性和对象内属性。")]),s._v(" "),t("ol",{attrs:{start:"2"}},[t("li",[s._v("根据属性访问速度的不同，可将属性分为"),t("strong",[s._v("快属性")]),s._v("和"),t("strong",[s._v("慢属性")]),s._v("。")])]),s._v(" "),t("h2",{attrs:{id:"快属性和慢属性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#快属性和慢属性"}},[s._v("#")]),s._v(" 快属性和慢属性")]),s._v(" "),t("p",[s._v("在对象的常规属性很少的时候，v8会把部分常规属性直接存储到对象本身，提高查询效率，我们把这些属性称为"),t("strong",[s._v("对象内属性（in object properties）")]),s._v("。如下图所示：")]),s._v(" "),t("div",{staticClass:"img-box"},[t("img",{attrs:{src:s.$withBase("/js/v8/对象内属性.svg"),alt:"图片加载失败"}})]),s._v(" "),t("p",[s._v("对象内属性的数量是固定的，最多10个，如果添加的属性超过了对象分配的空间，则会将它们保存在常规属性中。常规属性虽然多了一层中间层，但扩容比较方便。")]),s._v(" "),t("p",[s._v("快属性：保存在线性数据结构中的属性。其查询速度块，但添加或删除大量属性时较慢。\n慢属性：保存在非线性数据结构中的属性。v8的对象的属性一旦过多，就会采用非线性结构词典进行存储。")])])}),[],!1,null,null,null);t.default=r.exports}}]);