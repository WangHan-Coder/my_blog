(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{545:function(e,a,c){"use strict";c.r(a);var r=c(5),l=Object(r.a)({},(function(){var e=this,a=e.$createElement,c=e._self._c||a;return c("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[c("h2",{attrs:{id:"webpack5以及周边插件的改动"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#webpack5以及周边插件的改动"}},[e._v("#")]),e._v(" webpack5以及周边插件的改动")]),e._v(" "),c("ul",[c("li",[e._v("package.json的dev-server命令改为"),c("code",[e._v("webpack serve")])]),e._v(" "),c("li",[e._v("合并webpack配置插件webpack-merge导出的合并函数由"),c("code",[e._v("smart")]),e._v("变成了"),c("code",[e._v("merge")]),e._v("，"),c("code",[e._v("const { merge } = require('webpack-merge')")])]),e._v(" "),c("li",[e._v("从"),c("code",[e._v("const CleanWebpackPlugin = require('clean-webpack-plugin')")]),e._v("改为"),c("code",[e._v("const { CleanWebpackPlugin } = require('clean-webpack-plugin')")])]),e._v(" "),c("li",[c("code",[e._v("module.rules")]),e._v("中"),c("code",[e._v("loader: ['xxx-loader']")]),e._v("换成"),c("code",[e._v("use: ['xxx-loader']")])]),e._v(" "),c("li",[c("code",[e._v("filename: 'bundle.[contenthash:8].js'")]),e._v("其中"),c("code",[e._v("h")]),e._v("换成小写，大写无效")])])])}),[],!1,null,null,null);a.default=l.exports}}]);